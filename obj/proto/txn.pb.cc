// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: txn.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "txn.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class KeyEntryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<KeyEntry> {
} _KeyEntry_default_instance_;
class KeyEntriesDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<KeyEntries> {
} _KeyEntries_default_instance_;
class RemoteResultsEntryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RemoteResultsEntry> {
} _RemoteResultsEntry_default_instance_;
class RemoteResultsEntriesDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RemoteResultsEntries> {
} _RemoteResultsEntries_default_instance_;
class TxnProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TxnProto> {
} _TxnProto_default_instance_;
class LookupMasterEntryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LookupMasterEntry> {
} _LookupMasterEntry_default_instance_;
class LookupMasterResultEntryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LookupMasterResultEntry> {
} _LookupMasterResultEntry_default_instance_;

namespace protobuf_txn_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[7];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyEntry, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyEntry, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyEntry, master_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyEntry, counter_),
  0,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyEntries, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyEntries, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyEntries, entries_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoteResultsEntry, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoteResultsEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoteResultsEntry, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoteResultsEntry, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoteResultsEntry, master_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoteResultsEntry, counter_),
  0,
  1,
  3,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoteResultsEntries, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoteResultsEntries, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoteResultsEntries, entries_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxnProto, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxnProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxnProto, txn_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxnProto, txn_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxnProto, read_set_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxnProto, write_set_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxnProto, read_write_set_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxnProto, arg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxnProto, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxnProto, readers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxnProto, writers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxnProto, origin_replica_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxnProto, new_generated_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxnProto, involved_replicas_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxnProto, fake_txn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxnProto, remaster_txn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxnProto, client_replica_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxnProto, remaster_from_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxnProto, remaster_to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxnProto, wait_for_remaster_pros_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TxnProto, generated_machine_),
  1,
  2,
  ~0u,
  ~0u,
  ~0u,
  0,
  3,
  ~0u,
  ~0u,
  4,
  5,
  ~0u,
  6,
  7,
  9,
  10,
  11,
  8,
  12,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LookupMasterEntry, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LookupMasterEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LookupMasterEntry, txn_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LookupMasterEntry, keys_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LookupMasterResultEntry, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LookupMasterResultEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LookupMasterResultEntry, txn_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LookupMasterResultEntry, key_entries_),
  0,
  ~0u,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 7, sizeof(KeyEntry)},
  { 10, 15, sizeof(KeyEntries)},
  { 16, 24, sizeof(RemoteResultsEntry)},
  { 28, 33, sizeof(RemoteResultsEntries)},
  { 34, 57, sizeof(TxnProto)},
  { 76, 82, sizeof(LookupMasterEntry)},
  { 84, 90, sizeof(LookupMasterResultEntry)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_KeyEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_KeyEntries_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RemoteResultsEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RemoteResultsEntries_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TxnProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LookupMasterEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LookupMasterResultEntry_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "txn.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

}  // namespace

void TableStruct::Shutdown() {
  _KeyEntry_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _KeyEntries_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _RemoteResultsEntry_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _RemoteResultsEntries_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _TxnProto_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _LookupMasterEntry_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _LookupMasterResultEntry_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _KeyEntry_default_instance_.DefaultConstruct();
  _KeyEntries_default_instance_.DefaultConstruct();
  _RemoteResultsEntry_default_instance_.DefaultConstruct();
  _RemoteResultsEntries_default_instance_.DefaultConstruct();
  _TxnProto_default_instance_.DefaultConstruct();
  _LookupMasterEntry_default_instance_.DefaultConstruct();
  _LookupMasterResultEntry_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\ttxn.proto\"8\n\010KeyEntry\022\013\n\003key\030\001 \002(\014\022\016\n\006"
      "master\030\002 \002(\r\022\017\n\007counter\030\003 \002(\004\"(\n\nKeyEntr"
      "ies\022\032\n\007entries\030\001 \003(\0132\t.KeyEntry\"Q\n\022Remot"
      "eResultsEntry\022\013\n\003key\030\001 \002(\014\022\r\n\005value\030\002 \002("
      "\014\022\016\n\006master\030\003 \002(\r\022\017\n\007counter\030\004 \002(\004\"<\n\024Re"
      "moteResultsEntries\022$\n\007entries\030\001 \003(\0132\023.Re"
      "moteResultsEntry\"\331\004\n\010TxnProto\022\016\n\006txn_id\030"
      "\001 \002(\004\022\020\n\010txn_type\030\n \001(\r\022\033\n\010read_set\030\024 \003("
      "\0132\t.KeyEntry\022\034\n\twrite_set\030\025 \003(\0132\t.KeyEnt"
      "ry\022!\n\016read_write_set\030\026 \003(\0132\t.KeyEntry\022\013\n"
      "\003arg\030\027 \001(\014\022%\n\006status\030\036 \001(\0162\020.TxnProto.St"
      "atus:\003NEW\022\017\n\007readers\030( \003(\004\022\017\n\007writers\030) "
      "\003(\004\022\031\n\016origin_replica\0302 \001(\r:\0010\022\034\n\rnew_ge"
      "nerated\0303 \001(\010:\005false\022\031\n\021involved_replica"
      "s\0304 \003(\r\022\027\n\010fake_txn\0305 \001(\010:\005false\022\033\n\014rema"
      "ster_txn\0306 \001(\010:\005false\022\026\n\016client_replica\030"
      "7 \001(\r\022\034\n\rremaster_from\0308 \001(\r:\00599999\022\032\n\013r"
      "emaster_to\0309 \001(\r:\00599999\022%\n\026wait_for_rema"
      "ster_pros\030: \001(\010:\005false\022\037\n\021generated_mach"
      "ine\030@ \001(\004:\0041000\"S\n\006Status\022\007\n\003NEW\020\000\022\n\n\006AC"
      "TIVE\020\001\022\r\n\tCOMMITTED\020\002\022\013\n\007ABORTED\020\003\022\030\n\024AB"
      "ORTED_WITHOUT_LOCK\020\004\"1\n\021LookupMasterEntr"
      "y\022\016\n\006txn_id\030\001 \002(\004\022\014\n\004keys\030\002 \003(\014\"I\n\027Looku"
      "pMasterResultEntry\022\016\n\006txn_id\030\001 \002(\004\022\036\n\013ke"
      "y_entries\030\002 \003(\0132\t.KeyEntry"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 986);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "txn.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_txn_2eproto

const ::google::protobuf::EnumDescriptor* TxnProto_Status_descriptor() {
  protobuf_txn_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_txn_2eproto::file_level_enum_descriptors[0];
}
bool TxnProto_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TxnProto_Status TxnProto::NEW;
const TxnProto_Status TxnProto::ACTIVE;
const TxnProto_Status TxnProto::COMMITTED;
const TxnProto_Status TxnProto::ABORTED;
const TxnProto_Status TxnProto::ABORTED_WITHOUT_LOCK;
const TxnProto_Status TxnProto::Status_MIN;
const TxnProto_Status TxnProto::Status_MAX;
const int TxnProto::Status_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KeyEntry::kKeyFieldNumber;
const int KeyEntry::kMasterFieldNumber;
const int KeyEntry::kCounterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeyEntry::KeyEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_txn_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:KeyEntry)
}
KeyEntry::KeyEntry(const KeyEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  ::memcpy(&counter_, &from.counter_,
    reinterpret_cast<char*>(&master_) -
    reinterpret_cast<char*>(&counter_) + sizeof(master_));
  // @@protoc_insertion_point(copy_constructor:KeyEntry)
}

void KeyEntry::SharedCtor() {
  _cached_size_ = 0;
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&counter_, 0, reinterpret_cast<char*>(&master_) -
    reinterpret_cast<char*>(&counter_) + sizeof(master_));
}

KeyEntry::~KeyEntry() {
  // @@protoc_insertion_point(destructor:KeyEntry)
  SharedDtor();
}

void KeyEntry::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void KeyEntry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KeyEntry::descriptor() {
  protobuf_txn_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_txn_2eproto::file_level_metadata[0].descriptor;
}

const KeyEntry& KeyEntry::default_instance() {
  protobuf_txn_2eproto::InitDefaults();
  return *internal_default_instance();
}

KeyEntry* KeyEntry::New(::google::protobuf::Arena* arena) const {
  KeyEntry* n = new KeyEntry;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void KeyEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:KeyEntry)
  if (has_key()) {
    GOOGLE_DCHECK(!key_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*key_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 6u) {
    ::memset(&counter_, 0, reinterpret_cast<char*>(&master_) -
      reinterpret_cast<char*>(&counter_) + sizeof(master_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool KeyEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KeyEntry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes key = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 master = 2;
      case 2: {
        if (tag == 16u) {
          set_has_master();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &master_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 counter = 3;
      case 3: {
        if (tag == 24u) {
          set_has_counter();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &counter_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KeyEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KeyEntry)
  return false;
#undef DO_
}

void KeyEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KeyEntry)
  // required bytes key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->key(), output);
  }

  // required uint32 master = 2;
  if (has_master()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->master(), output);
  }

  // required uint64 counter = 3;
  if (has_counter()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->counter(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:KeyEntry)
}

::google::protobuf::uint8* KeyEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KeyEntry)
  // required bytes key = 1;
  if (has_key()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->key(), target);
  }

  // required uint32 master = 2;
  if (has_master()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->master(), target);
  }

  // required uint64 counter = 3;
  if (has_counter()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->counter(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KeyEntry)
  return target;
}

size_t KeyEntry::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:KeyEntry)
  size_t total_size = 0;

  if (has_key()) {
    // required bytes key = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }

  if (has_counter()) {
    // required uint64 counter = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->counter());
  }

  if (has_master()) {
    // required uint32 master = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->master());
  }

  return total_size;
}
size_t KeyEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KeyEntry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required bytes key = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());

    // required uint64 counter = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->counter());

    // required uint32 master = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->master());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KeyEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KeyEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const KeyEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KeyEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KeyEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KeyEntry)
    MergeFrom(*source);
  }
}

void KeyEntry::MergeFrom(const KeyEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KeyEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 7u) {
    if (from.has_key()) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (from.has_counter()) {
      set_counter(from.counter());
    }
    if (from.has_master()) {
      set_master(from.master());
    }
  }
}

void KeyEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KeyEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyEntry::CopyFrom(const KeyEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KeyEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyEntry::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void KeyEntry::Swap(KeyEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KeyEntry::InternalSwap(KeyEntry* other) {
  key_.Swap(&other->key_);
  std::swap(counter_, other->counter_);
  std::swap(master_, other->master_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata KeyEntry::GetMetadata() const {
  protobuf_txn_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_txn_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// KeyEntry

// required bytes key = 1;
bool KeyEntry::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void KeyEntry::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
void KeyEntry::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
void KeyEntry::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
const ::std::string& KeyEntry::key() const {
  // @@protoc_insertion_point(field_get:KeyEntry.key)
  return key_.GetNoArena();
}
void KeyEntry::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KeyEntry.key)
}
#if LANG_CXX11
void KeyEntry::set_key(::std::string&& value) {
  set_has_key();
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KeyEntry.key)
}
#endif
void KeyEntry::set_key(const char* value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KeyEntry.key)
}
void KeyEntry::set_key(const void* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KeyEntry.key)
}
::std::string* KeyEntry::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:KeyEntry.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* KeyEntry::release_key() {
  // @@protoc_insertion_point(field_release:KeyEntry.key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void KeyEntry::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:KeyEntry.key)
}

// required uint32 master = 2;
bool KeyEntry::has_master() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void KeyEntry::set_has_master() {
  _has_bits_[0] |= 0x00000004u;
}
void KeyEntry::clear_has_master() {
  _has_bits_[0] &= ~0x00000004u;
}
void KeyEntry::clear_master() {
  master_ = 0u;
  clear_has_master();
}
::google::protobuf::uint32 KeyEntry::master() const {
  // @@protoc_insertion_point(field_get:KeyEntry.master)
  return master_;
}
void KeyEntry::set_master(::google::protobuf::uint32 value) {
  set_has_master();
  master_ = value;
  // @@protoc_insertion_point(field_set:KeyEntry.master)
}

// required uint64 counter = 3;
bool KeyEntry::has_counter() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void KeyEntry::set_has_counter() {
  _has_bits_[0] |= 0x00000002u;
}
void KeyEntry::clear_has_counter() {
  _has_bits_[0] &= ~0x00000002u;
}
void KeyEntry::clear_counter() {
  counter_ = GOOGLE_ULONGLONG(0);
  clear_has_counter();
}
::google::protobuf::uint64 KeyEntry::counter() const {
  // @@protoc_insertion_point(field_get:KeyEntry.counter)
  return counter_;
}
void KeyEntry::set_counter(::google::protobuf::uint64 value) {
  set_has_counter();
  counter_ = value;
  // @@protoc_insertion_point(field_set:KeyEntry.counter)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KeyEntries::kEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeyEntries::KeyEntries()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_txn_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:KeyEntries)
}
KeyEntries::KeyEntries(const KeyEntries& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      entries_(from.entries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:KeyEntries)
}

void KeyEntries::SharedCtor() {
  _cached_size_ = 0;
}

KeyEntries::~KeyEntries() {
  // @@protoc_insertion_point(destructor:KeyEntries)
  SharedDtor();
}

void KeyEntries::SharedDtor() {
}

void KeyEntries::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KeyEntries::descriptor() {
  protobuf_txn_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_txn_2eproto::file_level_metadata[1].descriptor;
}

const KeyEntries& KeyEntries::default_instance() {
  protobuf_txn_2eproto::InitDefaults();
  return *internal_default_instance();
}

KeyEntries* KeyEntries::New(::google::protobuf::Arena* arena) const {
  KeyEntries* n = new KeyEntries;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void KeyEntries::Clear() {
// @@protoc_insertion_point(message_clear_start:KeyEntries)
  entries_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool KeyEntries::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KeyEntries)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .KeyEntry entries = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_entries()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KeyEntries)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KeyEntries)
  return false;
#undef DO_
}

void KeyEntries::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KeyEntries)
  // repeated .KeyEntry entries = 1;
  for (unsigned int i = 0, n = this->entries_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->entries(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:KeyEntries)
}

::google::protobuf::uint8* KeyEntries::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KeyEntries)
  // repeated .KeyEntry entries = 1;
  for (unsigned int i = 0, n = this->entries_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->entries(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KeyEntries)
  return target;
}

size_t KeyEntries::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KeyEntries)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .KeyEntry entries = 1;
  {
    unsigned int count = this->entries_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->entries(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KeyEntries::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KeyEntries)
  GOOGLE_DCHECK_NE(&from, this);
  const KeyEntries* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KeyEntries>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KeyEntries)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KeyEntries)
    MergeFrom(*source);
  }
}

void KeyEntries::MergeFrom(const KeyEntries& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KeyEntries)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  entries_.MergeFrom(from.entries_);
}

void KeyEntries::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KeyEntries)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyEntries::CopyFrom(const KeyEntries& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KeyEntries)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyEntries::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->entries())) return false;
  return true;
}

void KeyEntries::Swap(KeyEntries* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KeyEntries::InternalSwap(KeyEntries* other) {
  entries_.UnsafeArenaSwap(&other->entries_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata KeyEntries::GetMetadata() const {
  protobuf_txn_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_txn_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// KeyEntries

// repeated .KeyEntry entries = 1;
int KeyEntries::entries_size() const {
  return entries_.size();
}
void KeyEntries::clear_entries() {
  entries_.Clear();
}
const ::KeyEntry& KeyEntries::entries(int index) const {
  // @@protoc_insertion_point(field_get:KeyEntries.entries)
  return entries_.Get(index);
}
::KeyEntry* KeyEntries::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:KeyEntries.entries)
  return entries_.Mutable(index);
}
::KeyEntry* KeyEntries::add_entries() {
  // @@protoc_insertion_point(field_add:KeyEntries.entries)
  return entries_.Add();
}
::google::protobuf::RepeatedPtrField< ::KeyEntry >*
KeyEntries::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:KeyEntries.entries)
  return &entries_;
}
const ::google::protobuf::RepeatedPtrField< ::KeyEntry >&
KeyEntries::entries() const {
  // @@protoc_insertion_point(field_list:KeyEntries.entries)
  return entries_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemoteResultsEntry::kKeyFieldNumber;
const int RemoteResultsEntry::kValueFieldNumber;
const int RemoteResultsEntry::kMasterFieldNumber;
const int RemoteResultsEntry::kCounterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoteResultsEntry::RemoteResultsEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_txn_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RemoteResultsEntry)
}
RemoteResultsEntry::RemoteResultsEntry(const RemoteResultsEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  ::memcpy(&counter_, &from.counter_,
    reinterpret_cast<char*>(&master_) -
    reinterpret_cast<char*>(&counter_) + sizeof(master_));
  // @@protoc_insertion_point(copy_constructor:RemoteResultsEntry)
}

void RemoteResultsEntry::SharedCtor() {
  _cached_size_ = 0;
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&counter_, 0, reinterpret_cast<char*>(&master_) -
    reinterpret_cast<char*>(&counter_) + sizeof(master_));
}

RemoteResultsEntry::~RemoteResultsEntry() {
  // @@protoc_insertion_point(destructor:RemoteResultsEntry)
  SharedDtor();
}

void RemoteResultsEntry::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RemoteResultsEntry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemoteResultsEntry::descriptor() {
  protobuf_txn_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_txn_2eproto::file_level_metadata[2].descriptor;
}

const RemoteResultsEntry& RemoteResultsEntry::default_instance() {
  protobuf_txn_2eproto::InitDefaults();
  return *internal_default_instance();
}

RemoteResultsEntry* RemoteResultsEntry::New(::google::protobuf::Arena* arena) const {
  RemoteResultsEntry* n = new RemoteResultsEntry;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RemoteResultsEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:RemoteResultsEntry)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_key()) {
      GOOGLE_DCHECK(!key_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*key_.UnsafeRawStringPointer())->clear();
    }
    if (has_value()) {
      GOOGLE_DCHECK(!value_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*value_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 12u) {
    ::memset(&counter_, 0, reinterpret_cast<char*>(&master_) -
      reinterpret_cast<char*>(&counter_) + sizeof(master_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RemoteResultsEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RemoteResultsEntry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes key = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes value = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 master = 3;
      case 3: {
        if (tag == 24u) {
          set_has_master();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &master_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 counter = 4;
      case 4: {
        if (tag == 32u) {
          set_has_counter();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &counter_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RemoteResultsEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RemoteResultsEntry)
  return false;
#undef DO_
}

void RemoteResultsEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RemoteResultsEntry)
  // required bytes key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->key(), output);
  }

  // required bytes value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  // required uint32 master = 3;
  if (has_master()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->master(), output);
  }

  // required uint64 counter = 4;
  if (has_counter()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->counter(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RemoteResultsEntry)
}

::google::protobuf::uint8* RemoteResultsEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RemoteResultsEntry)
  // required bytes key = 1;
  if (has_key()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->key(), target);
  }

  // required bytes value = 2;
  if (has_value()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  // required uint32 master = 3;
  if (has_master()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->master(), target);
  }

  // required uint64 counter = 4;
  if (has_counter()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->counter(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RemoteResultsEntry)
  return target;
}

size_t RemoteResultsEntry::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:RemoteResultsEntry)
  size_t total_size = 0;

  if (has_key()) {
    // required bytes key = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }

  if (has_value()) {
    // required bytes value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  if (has_counter()) {
    // required uint64 counter = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->counter());
  }

  if (has_master()) {
    // required uint32 master = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->master());
  }

  return total_size;
}
size_t RemoteResultsEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RemoteResultsEntry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required bytes key = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());

    // required bytes value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());

    // required uint64 counter = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->counter());

    // required uint32 master = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->master());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RemoteResultsEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RemoteResultsEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoteResultsEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RemoteResultsEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RemoteResultsEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RemoteResultsEntry)
    MergeFrom(*source);
  }
}

void RemoteResultsEntry::MergeFrom(const RemoteResultsEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RemoteResultsEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 15u) {
    if (from.has_key()) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (from.has_value()) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
    if (from.has_counter()) {
      set_counter(from.counter());
    }
    if (from.has_master()) {
      set_master(from.master());
    }
  }
}

void RemoteResultsEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RemoteResultsEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoteResultsEntry::CopyFrom(const RemoteResultsEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RemoteResultsEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoteResultsEntry::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void RemoteResultsEntry::Swap(RemoteResultsEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemoteResultsEntry::InternalSwap(RemoteResultsEntry* other) {
  key_.Swap(&other->key_);
  value_.Swap(&other->value_);
  std::swap(counter_, other->counter_);
  std::swap(master_, other->master_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RemoteResultsEntry::GetMetadata() const {
  protobuf_txn_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_txn_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RemoteResultsEntry

// required bytes key = 1;
bool RemoteResultsEntry::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RemoteResultsEntry::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
void RemoteResultsEntry::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
void RemoteResultsEntry::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
const ::std::string& RemoteResultsEntry::key() const {
  // @@protoc_insertion_point(field_get:RemoteResultsEntry.key)
  return key_.GetNoArena();
}
void RemoteResultsEntry::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RemoteResultsEntry.key)
}
#if LANG_CXX11
void RemoteResultsEntry::set_key(::std::string&& value) {
  set_has_key();
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RemoteResultsEntry.key)
}
#endif
void RemoteResultsEntry::set_key(const char* value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RemoteResultsEntry.key)
}
void RemoteResultsEntry::set_key(const void* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RemoteResultsEntry.key)
}
::std::string* RemoteResultsEntry::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:RemoteResultsEntry.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RemoteResultsEntry::release_key() {
  // @@protoc_insertion_point(field_release:RemoteResultsEntry.key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RemoteResultsEntry::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:RemoteResultsEntry.key)
}

// required bytes value = 2;
bool RemoteResultsEntry::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RemoteResultsEntry::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
void RemoteResultsEntry::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void RemoteResultsEntry::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
const ::std::string& RemoteResultsEntry::value() const {
  // @@protoc_insertion_point(field_get:RemoteResultsEntry.value)
  return value_.GetNoArena();
}
void RemoteResultsEntry::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RemoteResultsEntry.value)
}
#if LANG_CXX11
void RemoteResultsEntry::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RemoteResultsEntry.value)
}
#endif
void RemoteResultsEntry::set_value(const char* value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RemoteResultsEntry.value)
}
void RemoteResultsEntry::set_value(const void* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RemoteResultsEntry.value)
}
::std::string* RemoteResultsEntry::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:RemoteResultsEntry.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RemoteResultsEntry::release_value() {
  // @@protoc_insertion_point(field_release:RemoteResultsEntry.value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RemoteResultsEntry::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:RemoteResultsEntry.value)
}

// required uint32 master = 3;
bool RemoteResultsEntry::has_master() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void RemoteResultsEntry::set_has_master() {
  _has_bits_[0] |= 0x00000008u;
}
void RemoteResultsEntry::clear_has_master() {
  _has_bits_[0] &= ~0x00000008u;
}
void RemoteResultsEntry::clear_master() {
  master_ = 0u;
  clear_has_master();
}
::google::protobuf::uint32 RemoteResultsEntry::master() const {
  // @@protoc_insertion_point(field_get:RemoteResultsEntry.master)
  return master_;
}
void RemoteResultsEntry::set_master(::google::protobuf::uint32 value) {
  set_has_master();
  master_ = value;
  // @@protoc_insertion_point(field_set:RemoteResultsEntry.master)
}

// required uint64 counter = 4;
bool RemoteResultsEntry::has_counter() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RemoteResultsEntry::set_has_counter() {
  _has_bits_[0] |= 0x00000004u;
}
void RemoteResultsEntry::clear_has_counter() {
  _has_bits_[0] &= ~0x00000004u;
}
void RemoteResultsEntry::clear_counter() {
  counter_ = GOOGLE_ULONGLONG(0);
  clear_has_counter();
}
::google::protobuf::uint64 RemoteResultsEntry::counter() const {
  // @@protoc_insertion_point(field_get:RemoteResultsEntry.counter)
  return counter_;
}
void RemoteResultsEntry::set_counter(::google::protobuf::uint64 value) {
  set_has_counter();
  counter_ = value;
  // @@protoc_insertion_point(field_set:RemoteResultsEntry.counter)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemoteResultsEntries::kEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoteResultsEntries::RemoteResultsEntries()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_txn_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RemoteResultsEntries)
}
RemoteResultsEntries::RemoteResultsEntries(const RemoteResultsEntries& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      entries_(from.entries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:RemoteResultsEntries)
}

void RemoteResultsEntries::SharedCtor() {
  _cached_size_ = 0;
}

RemoteResultsEntries::~RemoteResultsEntries() {
  // @@protoc_insertion_point(destructor:RemoteResultsEntries)
  SharedDtor();
}

void RemoteResultsEntries::SharedDtor() {
}

void RemoteResultsEntries::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemoteResultsEntries::descriptor() {
  protobuf_txn_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_txn_2eproto::file_level_metadata[3].descriptor;
}

const RemoteResultsEntries& RemoteResultsEntries::default_instance() {
  protobuf_txn_2eproto::InitDefaults();
  return *internal_default_instance();
}

RemoteResultsEntries* RemoteResultsEntries::New(::google::protobuf::Arena* arena) const {
  RemoteResultsEntries* n = new RemoteResultsEntries;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RemoteResultsEntries::Clear() {
// @@protoc_insertion_point(message_clear_start:RemoteResultsEntries)
  entries_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RemoteResultsEntries::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RemoteResultsEntries)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .RemoteResultsEntry entries = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_entries()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RemoteResultsEntries)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RemoteResultsEntries)
  return false;
#undef DO_
}

void RemoteResultsEntries::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RemoteResultsEntries)
  // repeated .RemoteResultsEntry entries = 1;
  for (unsigned int i = 0, n = this->entries_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->entries(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RemoteResultsEntries)
}

::google::protobuf::uint8* RemoteResultsEntries::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RemoteResultsEntries)
  // repeated .RemoteResultsEntry entries = 1;
  for (unsigned int i = 0, n = this->entries_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->entries(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RemoteResultsEntries)
  return target;
}

size_t RemoteResultsEntries::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RemoteResultsEntries)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .RemoteResultsEntry entries = 1;
  {
    unsigned int count = this->entries_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->entries(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RemoteResultsEntries::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RemoteResultsEntries)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoteResultsEntries* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RemoteResultsEntries>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RemoteResultsEntries)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RemoteResultsEntries)
    MergeFrom(*source);
  }
}

void RemoteResultsEntries::MergeFrom(const RemoteResultsEntries& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RemoteResultsEntries)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  entries_.MergeFrom(from.entries_);
}

void RemoteResultsEntries::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RemoteResultsEntries)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoteResultsEntries::CopyFrom(const RemoteResultsEntries& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RemoteResultsEntries)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoteResultsEntries::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->entries())) return false;
  return true;
}

void RemoteResultsEntries::Swap(RemoteResultsEntries* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemoteResultsEntries::InternalSwap(RemoteResultsEntries* other) {
  entries_.UnsafeArenaSwap(&other->entries_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RemoteResultsEntries::GetMetadata() const {
  protobuf_txn_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_txn_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RemoteResultsEntries

// repeated .RemoteResultsEntry entries = 1;
int RemoteResultsEntries::entries_size() const {
  return entries_.size();
}
void RemoteResultsEntries::clear_entries() {
  entries_.Clear();
}
const ::RemoteResultsEntry& RemoteResultsEntries::entries(int index) const {
  // @@protoc_insertion_point(field_get:RemoteResultsEntries.entries)
  return entries_.Get(index);
}
::RemoteResultsEntry* RemoteResultsEntries::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:RemoteResultsEntries.entries)
  return entries_.Mutable(index);
}
::RemoteResultsEntry* RemoteResultsEntries::add_entries() {
  // @@protoc_insertion_point(field_add:RemoteResultsEntries.entries)
  return entries_.Add();
}
::google::protobuf::RepeatedPtrField< ::RemoteResultsEntry >*
RemoteResultsEntries::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:RemoteResultsEntries.entries)
  return &entries_;
}
const ::google::protobuf::RepeatedPtrField< ::RemoteResultsEntry >&
RemoteResultsEntries::entries() const {
  // @@protoc_insertion_point(field_list:RemoteResultsEntries.entries)
  return entries_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TxnProto::kTxnIdFieldNumber;
const int TxnProto::kTxnTypeFieldNumber;
const int TxnProto::kReadSetFieldNumber;
const int TxnProto::kWriteSetFieldNumber;
const int TxnProto::kReadWriteSetFieldNumber;
const int TxnProto::kArgFieldNumber;
const int TxnProto::kStatusFieldNumber;
const int TxnProto::kReadersFieldNumber;
const int TxnProto::kWritersFieldNumber;
const int TxnProto::kOriginReplicaFieldNumber;
const int TxnProto::kNewGeneratedFieldNumber;
const int TxnProto::kInvolvedReplicasFieldNumber;
const int TxnProto::kFakeTxnFieldNumber;
const int TxnProto::kRemasterTxnFieldNumber;
const int TxnProto::kClientReplicaFieldNumber;
const int TxnProto::kRemasterFromFieldNumber;
const int TxnProto::kRemasterToFieldNumber;
const int TxnProto::kWaitForRemasterProsFieldNumber;
const int TxnProto::kGeneratedMachineFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TxnProto::TxnProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_txn_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TxnProto)
}
TxnProto::TxnProto(const TxnProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      read_set_(from.read_set_),
      write_set_(from.write_set_),
      read_write_set_(from.read_write_set_),
      readers_(from.readers_),
      writers_(from.writers_),
      involved_replicas_(from.involved_replicas_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  arg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_arg()) {
    arg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.arg_);
  }
  ::memcpy(&txn_id_, &from.txn_id_,
    reinterpret_cast<char*>(&generated_machine_) -
    reinterpret_cast<char*>(&txn_id_) + sizeof(generated_machine_));
  // @@protoc_insertion_point(copy_constructor:TxnProto)
}

void TxnProto::SharedCtor() {
  _cached_size_ = 0;
  arg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&txn_id_, 0, reinterpret_cast<char*>(&client_replica_) -
    reinterpret_cast<char*>(&txn_id_) + sizeof(client_replica_));
  remaster_from_ = 99999u;
  remaster_to_ = 99999u;
  generated_machine_ = GOOGLE_ULONGLONG(1000);
}

TxnProto::~TxnProto() {
  // @@protoc_insertion_point(destructor:TxnProto)
  SharedDtor();
}

void TxnProto::SharedDtor() {
  arg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TxnProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TxnProto::descriptor() {
  protobuf_txn_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_txn_2eproto::file_level_metadata[4].descriptor;
}

const TxnProto& TxnProto::default_instance() {
  protobuf_txn_2eproto::InitDefaults();
  return *internal_default_instance();
}

TxnProto* TxnProto::New(::google::protobuf::Arena* arena) const {
  TxnProto* n = new TxnProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TxnProto::Clear() {
// @@protoc_insertion_point(message_clear_start:TxnProto)
  read_set_.Clear();
  write_set_.Clear();
  read_write_set_.Clear();
  readers_.Clear();
  writers_.Clear();
  involved_replicas_.Clear();
  if (has_arg()) {
    GOOGLE_DCHECK(!arg_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*arg_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 254u) {
    ::memset(&txn_id_, 0, reinterpret_cast<char*>(&remaster_txn_) -
      reinterpret_cast<char*>(&txn_id_) + sizeof(remaster_txn_));
  }
  if (_has_bits_[8 / 32] & 7936u) {
    ::memset(&wait_for_remaster_pros_, 0, reinterpret_cast<char*>(&client_replica_) -
      reinterpret_cast<char*>(&wait_for_remaster_pros_) + sizeof(client_replica_));
    remaster_from_ = 99999u;
    remaster_to_ = 99999u;
    generated_machine_ = GOOGLE_ULONGLONG(1000);
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TxnProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TxnProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 txn_id = 1;
      case 1: {
        if (tag == 8u) {
          set_has_txn_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &txn_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 txn_type = 10;
      case 10: {
        if (tag == 80u) {
          set_has_txn_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &txn_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .KeyEntry read_set = 20;
      case 20: {
        if (tag == 162u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_read_set()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .KeyEntry write_set = 21;
      case 21: {
        if (tag == 170u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_write_set()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .KeyEntry read_write_set = 22;
      case 22: {
        if (tag == 178u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_read_write_set()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // optional bytes arg = 23;
      case 23: {
        if (tag == 186u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_arg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .TxnProto.Status status = 30 [default = NEW];
      case 30: {
        if (tag == 240u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::TxnProto_Status_IsValid(value)) {
            set_status(static_cast< ::TxnProto_Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(30, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 readers = 40;
      case 40: {
        if (tag == 320u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 2, 320u, input, this->mutable_readers())));
        } else if (tag == 322u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_readers())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 writers = 41;
      case 41: {
        if (tag == 328u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 2, 328u, input, this->mutable_writers())));
        } else if (tag == 330u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_writers())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 origin_replica = 50 [default = 0];
      case 50: {
        if (tag == 400u) {
          set_has_origin_replica();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &origin_replica_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool new_generated = 51 [default = false];
      case 51: {
        if (tag == 408u) {
          set_has_new_generated();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &new_generated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 involved_replicas = 52;
      case 52: {
        if (tag == 416u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 2, 416u, input, this->mutable_involved_replicas())));
        } else if (tag == 418u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_involved_replicas())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool fake_txn = 53 [default = false];
      case 53: {
        if (tag == 424u) {
          set_has_fake_txn();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &fake_txn_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool remaster_txn = 54 [default = false];
      case 54: {
        if (tag == 432u) {
          set_has_remaster_txn();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &remaster_txn_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 client_replica = 55;
      case 55: {
        if (tag == 440u) {
          set_has_client_replica();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &client_replica_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 remaster_from = 56 [default = 99999];
      case 56: {
        if (tag == 448u) {
          set_has_remaster_from();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &remaster_from_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 remaster_to = 57 [default = 99999];
      case 57: {
        if (tag == 456u) {
          set_has_remaster_to();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &remaster_to_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool wait_for_remaster_pros = 58 [default = false];
      case 58: {
        if (tag == 464u) {
          set_has_wait_for_remaster_pros();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &wait_for_remaster_pros_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 generated_machine = 64 [default = 1000];
      case 64: {
        if (tag == 512u) {
          set_has_generated_machine();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &generated_machine_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TxnProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TxnProto)
  return false;
#undef DO_
}

void TxnProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TxnProto)
  // required uint64 txn_id = 1;
  if (has_txn_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->txn_id(), output);
  }

  // optional uint32 txn_type = 10;
  if (has_txn_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->txn_type(), output);
  }

  // repeated .KeyEntry read_set = 20;
  for (unsigned int i = 0, n = this->read_set_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->read_set(i), output);
  }

  // repeated .KeyEntry write_set = 21;
  for (unsigned int i = 0, n = this->write_set_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->write_set(i), output);
  }

  // repeated .KeyEntry read_write_set = 22;
  for (unsigned int i = 0, n = this->read_write_set_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, this->read_write_set(i), output);
  }

  // optional bytes arg = 23;
  if (has_arg()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      23, this->arg(), output);
  }

  // optional .TxnProto.Status status = 30 [default = NEW];
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      30, this->status(), output);
  }

  // repeated uint64 readers = 40;
  for (int i = 0; i < this->readers_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      40, this->readers(i), output);
  }

  // repeated uint64 writers = 41;
  for (int i = 0; i < this->writers_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      41, this->writers(i), output);
  }

  // optional uint32 origin_replica = 50 [default = 0];
  if (has_origin_replica()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(50, this->origin_replica(), output);
  }

  // optional bool new_generated = 51 [default = false];
  if (has_new_generated()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(51, this->new_generated(), output);
  }

  // repeated uint32 involved_replicas = 52;
  for (int i = 0; i < this->involved_replicas_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      52, this->involved_replicas(i), output);
  }

  // optional bool fake_txn = 53 [default = false];
  if (has_fake_txn()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(53, this->fake_txn(), output);
  }

  // optional bool remaster_txn = 54 [default = false];
  if (has_remaster_txn()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(54, this->remaster_txn(), output);
  }

  // optional uint32 client_replica = 55;
  if (has_client_replica()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(55, this->client_replica(), output);
  }

  // optional uint32 remaster_from = 56 [default = 99999];
  if (has_remaster_from()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(56, this->remaster_from(), output);
  }

  // optional uint32 remaster_to = 57 [default = 99999];
  if (has_remaster_to()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(57, this->remaster_to(), output);
  }

  // optional bool wait_for_remaster_pros = 58 [default = false];
  if (has_wait_for_remaster_pros()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(58, this->wait_for_remaster_pros(), output);
  }

  // optional uint64 generated_machine = 64 [default = 1000];
  if (has_generated_machine()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(64, this->generated_machine(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TxnProto)
}

::google::protobuf::uint8* TxnProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TxnProto)
  // required uint64 txn_id = 1;
  if (has_txn_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->txn_id(), target);
  }

  // optional uint32 txn_type = 10;
  if (has_txn_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->txn_type(), target);
  }

  // repeated .KeyEntry read_set = 20;
  for (unsigned int i = 0, n = this->read_set_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        20, this->read_set(i), false, target);
  }

  // repeated .KeyEntry write_set = 21;
  for (unsigned int i = 0, n = this->write_set_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        21, this->write_set(i), false, target);
  }

  // repeated .KeyEntry read_write_set = 22;
  for (unsigned int i = 0, n = this->read_write_set_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        22, this->read_write_set(i), false, target);
  }

  // optional bytes arg = 23;
  if (has_arg()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        23, this->arg(), target);
  }

  // optional .TxnProto.Status status = 30 [default = NEW];
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      30, this->status(), target);
  }

  // repeated uint64 readers = 40;
  for (int i = 0; i < this->readers_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(40, this->readers(i), target);
  }

  // repeated uint64 writers = 41;
  for (int i = 0; i < this->writers_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(41, this->writers(i), target);
  }

  // optional uint32 origin_replica = 50 [default = 0];
  if (has_origin_replica()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(50, this->origin_replica(), target);
  }

  // optional bool new_generated = 51 [default = false];
  if (has_new_generated()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(51, this->new_generated(), target);
  }

  // repeated uint32 involved_replicas = 52;
  for (int i = 0; i < this->involved_replicas_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(52, this->involved_replicas(i), target);
  }

  // optional bool fake_txn = 53 [default = false];
  if (has_fake_txn()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(53, this->fake_txn(), target);
  }

  // optional bool remaster_txn = 54 [default = false];
  if (has_remaster_txn()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(54, this->remaster_txn(), target);
  }

  // optional uint32 client_replica = 55;
  if (has_client_replica()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(55, this->client_replica(), target);
  }

  // optional uint32 remaster_from = 56 [default = 99999];
  if (has_remaster_from()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(56, this->remaster_from(), target);
  }

  // optional uint32 remaster_to = 57 [default = 99999];
  if (has_remaster_to()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(57, this->remaster_to(), target);
  }

  // optional bool wait_for_remaster_pros = 58 [default = false];
  if (has_wait_for_remaster_pros()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(58, this->wait_for_remaster_pros(), target);
  }

  // optional uint64 generated_machine = 64 [default = 1000];
  if (has_generated_machine()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(64, this->generated_machine(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TxnProto)
  return target;
}

size_t TxnProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TxnProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required uint64 txn_id = 1;
  if (has_txn_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->txn_id());
  }
  // repeated .KeyEntry read_set = 20;
  {
    unsigned int count = this->read_set_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->read_set(i));
    }
  }

  // repeated .KeyEntry write_set = 21;
  {
    unsigned int count = this->write_set_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->write_set(i));
    }
  }

  // repeated .KeyEntry read_write_set = 22;
  {
    unsigned int count = this->read_write_set_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->read_write_set(i));
    }
  }

  // repeated uint64 readers = 40;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->readers_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->readers_size());
    total_size += data_size;
  }

  // repeated uint64 writers = 41;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->writers_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->writers_size());
    total_size += data_size;
  }

  // repeated uint32 involved_replicas = 52;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->involved_replicas_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->involved_replicas_size());
    total_size += data_size;
  }

  // optional bytes arg = 23;
  if (has_arg()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->arg());
  }

  if (_has_bits_[0 / 32] & 252u) {
    // optional uint32 txn_type = 10;
    if (has_txn_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->txn_type());
    }

    // optional .TxnProto.Status status = 30 [default = NEW];
    if (has_status()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

    // optional uint32 origin_replica = 50 [default = 0];
    if (has_origin_replica()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->origin_replica());
    }

    // optional bool new_generated = 51 [default = false];
    if (has_new_generated()) {
      total_size += 2 + 1;
    }

    // optional bool fake_txn = 53 [default = false];
    if (has_fake_txn()) {
      total_size += 2 + 1;
    }

    // optional bool remaster_txn = 54 [default = false];
    if (has_remaster_txn()) {
      total_size += 2 + 1;
    }

  }
  if (_has_bits_[8 / 32] & 7936u) {
    // optional bool wait_for_remaster_pros = 58 [default = false];
    if (has_wait_for_remaster_pros()) {
      total_size += 2 + 1;
    }

    // optional uint32 client_replica = 55;
    if (has_client_replica()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->client_replica());
    }

    // optional uint32 remaster_from = 56 [default = 99999];
    if (has_remaster_from()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->remaster_from());
    }

    // optional uint32 remaster_to = 57 [default = 99999];
    if (has_remaster_to()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->remaster_to());
    }

    // optional uint64 generated_machine = 64 [default = 1000];
    if (has_generated_machine()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->generated_machine());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TxnProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TxnProto)
  GOOGLE_DCHECK_NE(&from, this);
  const TxnProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TxnProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TxnProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TxnProto)
    MergeFrom(*source);
  }
}

void TxnProto::MergeFrom(const TxnProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TxnProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  read_set_.MergeFrom(from.read_set_);
  write_set_.MergeFrom(from.write_set_);
  read_write_set_.MergeFrom(from.read_write_set_);
  readers_.MergeFrom(from.readers_);
  writers_.MergeFrom(from.writers_);
  involved_replicas_.MergeFrom(from.involved_replicas_);
  if (from._has_bits_[0 / 32] & 255u) {
    if (from.has_arg()) {
      set_has_arg();
      arg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.arg_);
    }
    if (from.has_txn_id()) {
      set_txn_id(from.txn_id());
    }
    if (from.has_txn_type()) {
      set_txn_type(from.txn_type());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_origin_replica()) {
      set_origin_replica(from.origin_replica());
    }
    if (from.has_new_generated()) {
      set_new_generated(from.new_generated());
    }
    if (from.has_fake_txn()) {
      set_fake_txn(from.fake_txn());
    }
    if (from.has_remaster_txn()) {
      set_remaster_txn(from.remaster_txn());
    }
  }
  if (from._has_bits_[8 / 32] & 7936u) {
    if (from.has_wait_for_remaster_pros()) {
      set_wait_for_remaster_pros(from.wait_for_remaster_pros());
    }
    if (from.has_client_replica()) {
      set_client_replica(from.client_replica());
    }
    if (from.has_remaster_from()) {
      set_remaster_from(from.remaster_from());
    }
    if (from.has_remaster_to()) {
      set_remaster_to(from.remaster_to());
    }
    if (from.has_generated_machine()) {
      set_generated_machine(from.generated_machine());
    }
  }
}

void TxnProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TxnProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TxnProto::CopyFrom(const TxnProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TxnProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TxnProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->read_set())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->write_set())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->read_write_set())) return false;
  return true;
}

void TxnProto::Swap(TxnProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TxnProto::InternalSwap(TxnProto* other) {
  read_set_.UnsafeArenaSwap(&other->read_set_);
  write_set_.UnsafeArenaSwap(&other->write_set_);
  read_write_set_.UnsafeArenaSwap(&other->read_write_set_);
  readers_.UnsafeArenaSwap(&other->readers_);
  writers_.UnsafeArenaSwap(&other->writers_);
  involved_replicas_.UnsafeArenaSwap(&other->involved_replicas_);
  arg_.Swap(&other->arg_);
  std::swap(txn_id_, other->txn_id_);
  std::swap(txn_type_, other->txn_type_);
  std::swap(status_, other->status_);
  std::swap(origin_replica_, other->origin_replica_);
  std::swap(new_generated_, other->new_generated_);
  std::swap(fake_txn_, other->fake_txn_);
  std::swap(remaster_txn_, other->remaster_txn_);
  std::swap(wait_for_remaster_pros_, other->wait_for_remaster_pros_);
  std::swap(client_replica_, other->client_replica_);
  std::swap(remaster_from_, other->remaster_from_);
  std::swap(remaster_to_, other->remaster_to_);
  std::swap(generated_machine_, other->generated_machine_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TxnProto::GetMetadata() const {
  protobuf_txn_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_txn_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TxnProto

// required uint64 txn_id = 1;
bool TxnProto::has_txn_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TxnProto::set_has_txn_id() {
  _has_bits_[0] |= 0x00000002u;
}
void TxnProto::clear_has_txn_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void TxnProto::clear_txn_id() {
  txn_id_ = GOOGLE_ULONGLONG(0);
  clear_has_txn_id();
}
::google::protobuf::uint64 TxnProto::txn_id() const {
  // @@protoc_insertion_point(field_get:TxnProto.txn_id)
  return txn_id_;
}
void TxnProto::set_txn_id(::google::protobuf::uint64 value) {
  set_has_txn_id();
  txn_id_ = value;
  // @@protoc_insertion_point(field_set:TxnProto.txn_id)
}

// optional uint32 txn_type = 10;
bool TxnProto::has_txn_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void TxnProto::set_has_txn_type() {
  _has_bits_[0] |= 0x00000004u;
}
void TxnProto::clear_has_txn_type() {
  _has_bits_[0] &= ~0x00000004u;
}
void TxnProto::clear_txn_type() {
  txn_type_ = 0u;
  clear_has_txn_type();
}
::google::protobuf::uint32 TxnProto::txn_type() const {
  // @@protoc_insertion_point(field_get:TxnProto.txn_type)
  return txn_type_;
}
void TxnProto::set_txn_type(::google::protobuf::uint32 value) {
  set_has_txn_type();
  txn_type_ = value;
  // @@protoc_insertion_point(field_set:TxnProto.txn_type)
}

// repeated .KeyEntry read_set = 20;
int TxnProto::read_set_size() const {
  return read_set_.size();
}
void TxnProto::clear_read_set() {
  read_set_.Clear();
}
const ::KeyEntry& TxnProto::read_set(int index) const {
  // @@protoc_insertion_point(field_get:TxnProto.read_set)
  return read_set_.Get(index);
}
::KeyEntry* TxnProto::mutable_read_set(int index) {
  // @@protoc_insertion_point(field_mutable:TxnProto.read_set)
  return read_set_.Mutable(index);
}
::KeyEntry* TxnProto::add_read_set() {
  // @@protoc_insertion_point(field_add:TxnProto.read_set)
  return read_set_.Add();
}
::google::protobuf::RepeatedPtrField< ::KeyEntry >*
TxnProto::mutable_read_set() {
  // @@protoc_insertion_point(field_mutable_list:TxnProto.read_set)
  return &read_set_;
}
const ::google::protobuf::RepeatedPtrField< ::KeyEntry >&
TxnProto::read_set() const {
  // @@protoc_insertion_point(field_list:TxnProto.read_set)
  return read_set_;
}

// repeated .KeyEntry write_set = 21;
int TxnProto::write_set_size() const {
  return write_set_.size();
}
void TxnProto::clear_write_set() {
  write_set_.Clear();
}
const ::KeyEntry& TxnProto::write_set(int index) const {
  // @@protoc_insertion_point(field_get:TxnProto.write_set)
  return write_set_.Get(index);
}
::KeyEntry* TxnProto::mutable_write_set(int index) {
  // @@protoc_insertion_point(field_mutable:TxnProto.write_set)
  return write_set_.Mutable(index);
}
::KeyEntry* TxnProto::add_write_set() {
  // @@protoc_insertion_point(field_add:TxnProto.write_set)
  return write_set_.Add();
}
::google::protobuf::RepeatedPtrField< ::KeyEntry >*
TxnProto::mutable_write_set() {
  // @@protoc_insertion_point(field_mutable_list:TxnProto.write_set)
  return &write_set_;
}
const ::google::protobuf::RepeatedPtrField< ::KeyEntry >&
TxnProto::write_set() const {
  // @@protoc_insertion_point(field_list:TxnProto.write_set)
  return write_set_;
}

// repeated .KeyEntry read_write_set = 22;
int TxnProto::read_write_set_size() const {
  return read_write_set_.size();
}
void TxnProto::clear_read_write_set() {
  read_write_set_.Clear();
}
const ::KeyEntry& TxnProto::read_write_set(int index) const {
  // @@protoc_insertion_point(field_get:TxnProto.read_write_set)
  return read_write_set_.Get(index);
}
::KeyEntry* TxnProto::mutable_read_write_set(int index) {
  // @@protoc_insertion_point(field_mutable:TxnProto.read_write_set)
  return read_write_set_.Mutable(index);
}
::KeyEntry* TxnProto::add_read_write_set() {
  // @@protoc_insertion_point(field_add:TxnProto.read_write_set)
  return read_write_set_.Add();
}
::google::protobuf::RepeatedPtrField< ::KeyEntry >*
TxnProto::mutable_read_write_set() {
  // @@protoc_insertion_point(field_mutable_list:TxnProto.read_write_set)
  return &read_write_set_;
}
const ::google::protobuf::RepeatedPtrField< ::KeyEntry >&
TxnProto::read_write_set() const {
  // @@protoc_insertion_point(field_list:TxnProto.read_write_set)
  return read_write_set_;
}

// optional bytes arg = 23;
bool TxnProto::has_arg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TxnProto::set_has_arg() {
  _has_bits_[0] |= 0x00000001u;
}
void TxnProto::clear_has_arg() {
  _has_bits_[0] &= ~0x00000001u;
}
void TxnProto::clear_arg() {
  arg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_arg();
}
const ::std::string& TxnProto::arg() const {
  // @@protoc_insertion_point(field_get:TxnProto.arg)
  return arg_.GetNoArena();
}
void TxnProto::set_arg(const ::std::string& value) {
  set_has_arg();
  arg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TxnProto.arg)
}
#if LANG_CXX11
void TxnProto::set_arg(::std::string&& value) {
  set_has_arg();
  arg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TxnProto.arg)
}
#endif
void TxnProto::set_arg(const char* value) {
  set_has_arg();
  arg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TxnProto.arg)
}
void TxnProto::set_arg(const void* value, size_t size) {
  set_has_arg();
  arg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TxnProto.arg)
}
::std::string* TxnProto::mutable_arg() {
  set_has_arg();
  // @@protoc_insertion_point(field_mutable:TxnProto.arg)
  return arg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TxnProto::release_arg() {
  // @@protoc_insertion_point(field_release:TxnProto.arg)
  clear_has_arg();
  return arg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TxnProto::set_allocated_arg(::std::string* arg) {
  if (arg != NULL) {
    set_has_arg();
  } else {
    clear_has_arg();
  }
  arg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arg);
  // @@protoc_insertion_point(field_set_allocated:TxnProto.arg)
}

// optional .TxnProto.Status status = 30 [default = NEW];
bool TxnProto::has_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void TxnProto::set_has_status() {
  _has_bits_[0] |= 0x00000008u;
}
void TxnProto::clear_has_status() {
  _has_bits_[0] &= ~0x00000008u;
}
void TxnProto::clear_status() {
  status_ = 0;
  clear_has_status();
}
::TxnProto_Status TxnProto::status() const {
  // @@protoc_insertion_point(field_get:TxnProto.status)
  return static_cast< ::TxnProto_Status >(status_);
}
void TxnProto::set_status(::TxnProto_Status value) {
  assert(::TxnProto_Status_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:TxnProto.status)
}

// repeated uint64 readers = 40;
int TxnProto::readers_size() const {
  return readers_.size();
}
void TxnProto::clear_readers() {
  readers_.Clear();
}
::google::protobuf::uint64 TxnProto::readers(int index) const {
  // @@protoc_insertion_point(field_get:TxnProto.readers)
  return readers_.Get(index);
}
void TxnProto::set_readers(int index, ::google::protobuf::uint64 value) {
  readers_.Set(index, value);
  // @@protoc_insertion_point(field_set:TxnProto.readers)
}
void TxnProto::add_readers(::google::protobuf::uint64 value) {
  readers_.Add(value);
  // @@protoc_insertion_point(field_add:TxnProto.readers)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
TxnProto::readers() const {
  // @@protoc_insertion_point(field_list:TxnProto.readers)
  return readers_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
TxnProto::mutable_readers() {
  // @@protoc_insertion_point(field_mutable_list:TxnProto.readers)
  return &readers_;
}

// repeated uint64 writers = 41;
int TxnProto::writers_size() const {
  return writers_.size();
}
void TxnProto::clear_writers() {
  writers_.Clear();
}
::google::protobuf::uint64 TxnProto::writers(int index) const {
  // @@protoc_insertion_point(field_get:TxnProto.writers)
  return writers_.Get(index);
}
void TxnProto::set_writers(int index, ::google::protobuf::uint64 value) {
  writers_.Set(index, value);
  // @@protoc_insertion_point(field_set:TxnProto.writers)
}
void TxnProto::add_writers(::google::protobuf::uint64 value) {
  writers_.Add(value);
  // @@protoc_insertion_point(field_add:TxnProto.writers)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
TxnProto::writers() const {
  // @@protoc_insertion_point(field_list:TxnProto.writers)
  return writers_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
TxnProto::mutable_writers() {
  // @@protoc_insertion_point(field_mutable_list:TxnProto.writers)
  return &writers_;
}

// optional uint32 origin_replica = 50 [default = 0];
bool TxnProto::has_origin_replica() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void TxnProto::set_has_origin_replica() {
  _has_bits_[0] |= 0x00000010u;
}
void TxnProto::clear_has_origin_replica() {
  _has_bits_[0] &= ~0x00000010u;
}
void TxnProto::clear_origin_replica() {
  origin_replica_ = 0u;
  clear_has_origin_replica();
}
::google::protobuf::uint32 TxnProto::origin_replica() const {
  // @@protoc_insertion_point(field_get:TxnProto.origin_replica)
  return origin_replica_;
}
void TxnProto::set_origin_replica(::google::protobuf::uint32 value) {
  set_has_origin_replica();
  origin_replica_ = value;
  // @@protoc_insertion_point(field_set:TxnProto.origin_replica)
}

// optional bool new_generated = 51 [default = false];
bool TxnProto::has_new_generated() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void TxnProto::set_has_new_generated() {
  _has_bits_[0] |= 0x00000020u;
}
void TxnProto::clear_has_new_generated() {
  _has_bits_[0] &= ~0x00000020u;
}
void TxnProto::clear_new_generated() {
  new_generated_ = false;
  clear_has_new_generated();
}
bool TxnProto::new_generated() const {
  // @@protoc_insertion_point(field_get:TxnProto.new_generated)
  return new_generated_;
}
void TxnProto::set_new_generated(bool value) {
  set_has_new_generated();
  new_generated_ = value;
  // @@protoc_insertion_point(field_set:TxnProto.new_generated)
}

// repeated uint32 involved_replicas = 52;
int TxnProto::involved_replicas_size() const {
  return involved_replicas_.size();
}
void TxnProto::clear_involved_replicas() {
  involved_replicas_.Clear();
}
::google::protobuf::uint32 TxnProto::involved_replicas(int index) const {
  // @@protoc_insertion_point(field_get:TxnProto.involved_replicas)
  return involved_replicas_.Get(index);
}
void TxnProto::set_involved_replicas(int index, ::google::protobuf::uint32 value) {
  involved_replicas_.Set(index, value);
  // @@protoc_insertion_point(field_set:TxnProto.involved_replicas)
}
void TxnProto::add_involved_replicas(::google::protobuf::uint32 value) {
  involved_replicas_.Add(value);
  // @@protoc_insertion_point(field_add:TxnProto.involved_replicas)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TxnProto::involved_replicas() const {
  // @@protoc_insertion_point(field_list:TxnProto.involved_replicas)
  return involved_replicas_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TxnProto::mutable_involved_replicas() {
  // @@protoc_insertion_point(field_mutable_list:TxnProto.involved_replicas)
  return &involved_replicas_;
}

// optional bool fake_txn = 53 [default = false];
bool TxnProto::has_fake_txn() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void TxnProto::set_has_fake_txn() {
  _has_bits_[0] |= 0x00000040u;
}
void TxnProto::clear_has_fake_txn() {
  _has_bits_[0] &= ~0x00000040u;
}
void TxnProto::clear_fake_txn() {
  fake_txn_ = false;
  clear_has_fake_txn();
}
bool TxnProto::fake_txn() const {
  // @@protoc_insertion_point(field_get:TxnProto.fake_txn)
  return fake_txn_;
}
void TxnProto::set_fake_txn(bool value) {
  set_has_fake_txn();
  fake_txn_ = value;
  // @@protoc_insertion_point(field_set:TxnProto.fake_txn)
}

// optional bool remaster_txn = 54 [default = false];
bool TxnProto::has_remaster_txn() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void TxnProto::set_has_remaster_txn() {
  _has_bits_[0] |= 0x00000080u;
}
void TxnProto::clear_has_remaster_txn() {
  _has_bits_[0] &= ~0x00000080u;
}
void TxnProto::clear_remaster_txn() {
  remaster_txn_ = false;
  clear_has_remaster_txn();
}
bool TxnProto::remaster_txn() const {
  // @@protoc_insertion_point(field_get:TxnProto.remaster_txn)
  return remaster_txn_;
}
void TxnProto::set_remaster_txn(bool value) {
  set_has_remaster_txn();
  remaster_txn_ = value;
  // @@protoc_insertion_point(field_set:TxnProto.remaster_txn)
}

// optional uint32 client_replica = 55;
bool TxnProto::has_client_replica() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void TxnProto::set_has_client_replica() {
  _has_bits_[0] |= 0x00000200u;
}
void TxnProto::clear_has_client_replica() {
  _has_bits_[0] &= ~0x00000200u;
}
void TxnProto::clear_client_replica() {
  client_replica_ = 0u;
  clear_has_client_replica();
}
::google::protobuf::uint32 TxnProto::client_replica() const {
  // @@protoc_insertion_point(field_get:TxnProto.client_replica)
  return client_replica_;
}
void TxnProto::set_client_replica(::google::protobuf::uint32 value) {
  set_has_client_replica();
  client_replica_ = value;
  // @@protoc_insertion_point(field_set:TxnProto.client_replica)
}

// optional uint32 remaster_from = 56 [default = 99999];
bool TxnProto::has_remaster_from() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void TxnProto::set_has_remaster_from() {
  _has_bits_[0] |= 0x00000400u;
}
void TxnProto::clear_has_remaster_from() {
  _has_bits_[0] &= ~0x00000400u;
}
void TxnProto::clear_remaster_from() {
  remaster_from_ = 99999u;
  clear_has_remaster_from();
}
::google::protobuf::uint32 TxnProto::remaster_from() const {
  // @@protoc_insertion_point(field_get:TxnProto.remaster_from)
  return remaster_from_;
}
void TxnProto::set_remaster_from(::google::protobuf::uint32 value) {
  set_has_remaster_from();
  remaster_from_ = value;
  // @@protoc_insertion_point(field_set:TxnProto.remaster_from)
}

// optional uint32 remaster_to = 57 [default = 99999];
bool TxnProto::has_remaster_to() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void TxnProto::set_has_remaster_to() {
  _has_bits_[0] |= 0x00000800u;
}
void TxnProto::clear_has_remaster_to() {
  _has_bits_[0] &= ~0x00000800u;
}
void TxnProto::clear_remaster_to() {
  remaster_to_ = 99999u;
  clear_has_remaster_to();
}
::google::protobuf::uint32 TxnProto::remaster_to() const {
  // @@protoc_insertion_point(field_get:TxnProto.remaster_to)
  return remaster_to_;
}
void TxnProto::set_remaster_to(::google::protobuf::uint32 value) {
  set_has_remaster_to();
  remaster_to_ = value;
  // @@protoc_insertion_point(field_set:TxnProto.remaster_to)
}

// optional bool wait_for_remaster_pros = 58 [default = false];
bool TxnProto::has_wait_for_remaster_pros() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void TxnProto::set_has_wait_for_remaster_pros() {
  _has_bits_[0] |= 0x00000100u;
}
void TxnProto::clear_has_wait_for_remaster_pros() {
  _has_bits_[0] &= ~0x00000100u;
}
void TxnProto::clear_wait_for_remaster_pros() {
  wait_for_remaster_pros_ = false;
  clear_has_wait_for_remaster_pros();
}
bool TxnProto::wait_for_remaster_pros() const {
  // @@protoc_insertion_point(field_get:TxnProto.wait_for_remaster_pros)
  return wait_for_remaster_pros_;
}
void TxnProto::set_wait_for_remaster_pros(bool value) {
  set_has_wait_for_remaster_pros();
  wait_for_remaster_pros_ = value;
  // @@protoc_insertion_point(field_set:TxnProto.wait_for_remaster_pros)
}

// optional uint64 generated_machine = 64 [default = 1000];
bool TxnProto::has_generated_machine() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void TxnProto::set_has_generated_machine() {
  _has_bits_[0] |= 0x00001000u;
}
void TxnProto::clear_has_generated_machine() {
  _has_bits_[0] &= ~0x00001000u;
}
void TxnProto::clear_generated_machine() {
  generated_machine_ = GOOGLE_ULONGLONG(1000);
  clear_has_generated_machine();
}
::google::protobuf::uint64 TxnProto::generated_machine() const {
  // @@protoc_insertion_point(field_get:TxnProto.generated_machine)
  return generated_machine_;
}
void TxnProto::set_generated_machine(::google::protobuf::uint64 value) {
  set_has_generated_machine();
  generated_machine_ = value;
  // @@protoc_insertion_point(field_set:TxnProto.generated_machine)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LookupMasterEntry::kTxnIdFieldNumber;
const int LookupMasterEntry::kKeysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LookupMasterEntry::LookupMasterEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_txn_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:LookupMasterEntry)
}
LookupMasterEntry::LookupMasterEntry(const LookupMasterEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      keys_(from.keys_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  txn_id_ = from.txn_id_;
  // @@protoc_insertion_point(copy_constructor:LookupMasterEntry)
}

void LookupMasterEntry::SharedCtor() {
  _cached_size_ = 0;
  txn_id_ = GOOGLE_ULONGLONG(0);
}

LookupMasterEntry::~LookupMasterEntry() {
  // @@protoc_insertion_point(destructor:LookupMasterEntry)
  SharedDtor();
}

void LookupMasterEntry::SharedDtor() {
}

void LookupMasterEntry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LookupMasterEntry::descriptor() {
  protobuf_txn_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_txn_2eproto::file_level_metadata[5].descriptor;
}

const LookupMasterEntry& LookupMasterEntry::default_instance() {
  protobuf_txn_2eproto::InitDefaults();
  return *internal_default_instance();
}

LookupMasterEntry* LookupMasterEntry::New(::google::protobuf::Arena* arena) const {
  LookupMasterEntry* n = new LookupMasterEntry;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LookupMasterEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:LookupMasterEntry)
  keys_.Clear();
  txn_id_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LookupMasterEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LookupMasterEntry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 txn_id = 1;
      case 1: {
        if (tag == 8u) {
          set_has_txn_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &txn_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes keys = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_keys()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LookupMasterEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LookupMasterEntry)
  return false;
#undef DO_
}

void LookupMasterEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LookupMasterEntry)
  // required uint64 txn_id = 1;
  if (has_txn_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->txn_id(), output);
  }

  // repeated bytes keys = 2;
  for (int i = 0; i < this->keys_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->keys(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:LookupMasterEntry)
}

::google::protobuf::uint8* LookupMasterEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LookupMasterEntry)
  // required uint64 txn_id = 1;
  if (has_txn_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->txn_id(), target);
  }

  // repeated bytes keys = 2;
  for (int i = 0; i < this->keys_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(2, this->keys(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LookupMasterEntry)
  return target;
}

size_t LookupMasterEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LookupMasterEntry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required uint64 txn_id = 1;
  if (has_txn_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->txn_id());
  }
  // repeated bytes keys = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->keys_size());
  for (int i = 0; i < this->keys_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->keys(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LookupMasterEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LookupMasterEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const LookupMasterEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LookupMasterEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LookupMasterEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LookupMasterEntry)
    MergeFrom(*source);
  }
}

void LookupMasterEntry::MergeFrom(const LookupMasterEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LookupMasterEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  keys_.MergeFrom(from.keys_);
  if (from.has_txn_id()) {
    set_txn_id(from.txn_id());
  }
}

void LookupMasterEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LookupMasterEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LookupMasterEntry::CopyFrom(const LookupMasterEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LookupMasterEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LookupMasterEntry::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void LookupMasterEntry::Swap(LookupMasterEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LookupMasterEntry::InternalSwap(LookupMasterEntry* other) {
  keys_.UnsafeArenaSwap(&other->keys_);
  std::swap(txn_id_, other->txn_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LookupMasterEntry::GetMetadata() const {
  protobuf_txn_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_txn_2eproto::file_level_metadata[5];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LookupMasterEntry

// required uint64 txn_id = 1;
bool LookupMasterEntry::has_txn_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LookupMasterEntry::set_has_txn_id() {
  _has_bits_[0] |= 0x00000001u;
}
void LookupMasterEntry::clear_has_txn_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void LookupMasterEntry::clear_txn_id() {
  txn_id_ = GOOGLE_ULONGLONG(0);
  clear_has_txn_id();
}
::google::protobuf::uint64 LookupMasterEntry::txn_id() const {
  // @@protoc_insertion_point(field_get:LookupMasterEntry.txn_id)
  return txn_id_;
}
void LookupMasterEntry::set_txn_id(::google::protobuf::uint64 value) {
  set_has_txn_id();
  txn_id_ = value;
  // @@protoc_insertion_point(field_set:LookupMasterEntry.txn_id)
}

// repeated bytes keys = 2;
int LookupMasterEntry::keys_size() const {
  return keys_.size();
}
void LookupMasterEntry::clear_keys() {
  keys_.Clear();
}
const ::std::string& LookupMasterEntry::keys(int index) const {
  // @@protoc_insertion_point(field_get:LookupMasterEntry.keys)
  return keys_.Get(index);
}
::std::string* LookupMasterEntry::mutable_keys(int index) {
  // @@protoc_insertion_point(field_mutable:LookupMasterEntry.keys)
  return keys_.Mutable(index);
}
void LookupMasterEntry::set_keys(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:LookupMasterEntry.keys)
  keys_.Mutable(index)->assign(value);
}
void LookupMasterEntry::set_keys(int index, const char* value) {
  keys_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:LookupMasterEntry.keys)
}
void LookupMasterEntry::set_keys(int index, const void* value, size_t size) {
  keys_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LookupMasterEntry.keys)
}
::std::string* LookupMasterEntry::add_keys() {
  // @@protoc_insertion_point(field_add_mutable:LookupMasterEntry.keys)
  return keys_.Add();
}
void LookupMasterEntry::add_keys(const ::std::string& value) {
  keys_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:LookupMasterEntry.keys)
}
void LookupMasterEntry::add_keys(const char* value) {
  keys_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:LookupMasterEntry.keys)
}
void LookupMasterEntry::add_keys(const void* value, size_t size) {
  keys_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:LookupMasterEntry.keys)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
LookupMasterEntry::keys() const {
  // @@protoc_insertion_point(field_list:LookupMasterEntry.keys)
  return keys_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
LookupMasterEntry::mutable_keys() {
  // @@protoc_insertion_point(field_mutable_list:LookupMasterEntry.keys)
  return &keys_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LookupMasterResultEntry::kTxnIdFieldNumber;
const int LookupMasterResultEntry::kKeyEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LookupMasterResultEntry::LookupMasterResultEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_txn_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:LookupMasterResultEntry)
}
LookupMasterResultEntry::LookupMasterResultEntry(const LookupMasterResultEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      key_entries_(from.key_entries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  txn_id_ = from.txn_id_;
  // @@protoc_insertion_point(copy_constructor:LookupMasterResultEntry)
}

void LookupMasterResultEntry::SharedCtor() {
  _cached_size_ = 0;
  txn_id_ = GOOGLE_ULONGLONG(0);
}

LookupMasterResultEntry::~LookupMasterResultEntry() {
  // @@protoc_insertion_point(destructor:LookupMasterResultEntry)
  SharedDtor();
}

void LookupMasterResultEntry::SharedDtor() {
}

void LookupMasterResultEntry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LookupMasterResultEntry::descriptor() {
  protobuf_txn_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_txn_2eproto::file_level_metadata[6].descriptor;
}

const LookupMasterResultEntry& LookupMasterResultEntry::default_instance() {
  protobuf_txn_2eproto::InitDefaults();
  return *internal_default_instance();
}

LookupMasterResultEntry* LookupMasterResultEntry::New(::google::protobuf::Arena* arena) const {
  LookupMasterResultEntry* n = new LookupMasterResultEntry;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LookupMasterResultEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:LookupMasterResultEntry)
  key_entries_.Clear();
  txn_id_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LookupMasterResultEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LookupMasterResultEntry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 txn_id = 1;
      case 1: {
        if (tag == 8u) {
          set_has_txn_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &txn_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .KeyEntry key_entries = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_key_entries()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LookupMasterResultEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LookupMasterResultEntry)
  return false;
#undef DO_
}

void LookupMasterResultEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LookupMasterResultEntry)
  // required uint64 txn_id = 1;
  if (has_txn_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->txn_id(), output);
  }

  // repeated .KeyEntry key_entries = 2;
  for (unsigned int i = 0, n = this->key_entries_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->key_entries(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:LookupMasterResultEntry)
}

::google::protobuf::uint8* LookupMasterResultEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LookupMasterResultEntry)
  // required uint64 txn_id = 1;
  if (has_txn_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->txn_id(), target);
  }

  // repeated .KeyEntry key_entries = 2;
  for (unsigned int i = 0, n = this->key_entries_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->key_entries(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LookupMasterResultEntry)
  return target;
}

size_t LookupMasterResultEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LookupMasterResultEntry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required uint64 txn_id = 1;
  if (has_txn_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->txn_id());
  }
  // repeated .KeyEntry key_entries = 2;
  {
    unsigned int count = this->key_entries_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->key_entries(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LookupMasterResultEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LookupMasterResultEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const LookupMasterResultEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LookupMasterResultEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LookupMasterResultEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LookupMasterResultEntry)
    MergeFrom(*source);
  }
}

void LookupMasterResultEntry::MergeFrom(const LookupMasterResultEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LookupMasterResultEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_entries_.MergeFrom(from.key_entries_);
  if (from.has_txn_id()) {
    set_txn_id(from.txn_id());
  }
}

void LookupMasterResultEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LookupMasterResultEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LookupMasterResultEntry::CopyFrom(const LookupMasterResultEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LookupMasterResultEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LookupMasterResultEntry::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->key_entries())) return false;
  return true;
}

void LookupMasterResultEntry::Swap(LookupMasterResultEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LookupMasterResultEntry::InternalSwap(LookupMasterResultEntry* other) {
  key_entries_.UnsafeArenaSwap(&other->key_entries_);
  std::swap(txn_id_, other->txn_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LookupMasterResultEntry::GetMetadata() const {
  protobuf_txn_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_txn_2eproto::file_level_metadata[6];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LookupMasterResultEntry

// required uint64 txn_id = 1;
bool LookupMasterResultEntry::has_txn_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LookupMasterResultEntry::set_has_txn_id() {
  _has_bits_[0] |= 0x00000001u;
}
void LookupMasterResultEntry::clear_has_txn_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void LookupMasterResultEntry::clear_txn_id() {
  txn_id_ = GOOGLE_ULONGLONG(0);
  clear_has_txn_id();
}
::google::protobuf::uint64 LookupMasterResultEntry::txn_id() const {
  // @@protoc_insertion_point(field_get:LookupMasterResultEntry.txn_id)
  return txn_id_;
}
void LookupMasterResultEntry::set_txn_id(::google::protobuf::uint64 value) {
  set_has_txn_id();
  txn_id_ = value;
  // @@protoc_insertion_point(field_set:LookupMasterResultEntry.txn_id)
}

// repeated .KeyEntry key_entries = 2;
int LookupMasterResultEntry::key_entries_size() const {
  return key_entries_.size();
}
void LookupMasterResultEntry::clear_key_entries() {
  key_entries_.Clear();
}
const ::KeyEntry& LookupMasterResultEntry::key_entries(int index) const {
  // @@protoc_insertion_point(field_get:LookupMasterResultEntry.key_entries)
  return key_entries_.Get(index);
}
::KeyEntry* LookupMasterResultEntry::mutable_key_entries(int index) {
  // @@protoc_insertion_point(field_mutable:LookupMasterResultEntry.key_entries)
  return key_entries_.Mutable(index);
}
::KeyEntry* LookupMasterResultEntry::add_key_entries() {
  // @@protoc_insertion_point(field_add:LookupMasterResultEntry.key_entries)
  return key_entries_.Add();
}
::google::protobuf::RepeatedPtrField< ::KeyEntry >*
LookupMasterResultEntry::mutable_key_entries() {
  // @@protoc_insertion_point(field_mutable_list:LookupMasterResultEntry.key_entries)
  return &key_entries_;
}
const ::google::protobuf::RepeatedPtrField< ::KeyEntry >&
LookupMasterResultEntry::key_entries() const {
  // @@protoc_insertion_point(field_list:LookupMasterResultEntry.key_entries)
  return key_entries_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
