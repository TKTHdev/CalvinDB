// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cluster_config.proto

#ifndef PROTOBUF_cluster_5fconfig_2eproto__INCLUDED
#define PROTOBUF_cluster_5fconfig_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
class ClusterConfigProto;
class ClusterConfigProtoDefaultTypeInternal;
extern ClusterConfigProtoDefaultTypeInternal _ClusterConfigProto_default_instance_;
class MachineInfo;
class MachineInfoDefaultTypeInternal;
extern MachineInfoDefaultTypeInternal _MachineInfo_default_instance_;

namespace protobuf_cluster_5fconfig_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_cluster_5fconfig_2eproto

// ===================================================================

class MachineInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MachineInfo) */ {
 public:
  MachineInfo();
  virtual ~MachineInfo();

  MachineInfo(const MachineInfo& from);

  inline MachineInfo& operator=(const MachineInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MachineInfo& default_instance();

  static inline const MachineInfo* internal_default_instance() {
    return reinterpret_cast<const MachineInfo*>(
               &_MachineInfo_default_instance_);
  }

  void Swap(MachineInfo* other);

  // implements Message ----------------------------------------------

  inline MachineInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  MachineInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MachineInfo& from);
  void MergeFrom(const MachineInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MachineInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string host = 3;
  bool has_host() const;
  void clear_host();
  static const int kHostFieldNumber = 3;
  const ::std::string& host() const;
  void set_host(const ::std::string& value);
  #if LANG_CXX11
  void set_host(::std::string&& value);
  #endif
  void set_host(const char* value);
  void set_host(const char* value, size_t size);
  ::std::string* mutable_host();
  ::std::string* release_host();
  void set_allocated_host(::std::string* host);

  // optional uint64 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // optional uint32 replica = 2;
  bool has_replica() const;
  void clear_replica();
  static const int kReplicaFieldNumber = 2;
  ::google::protobuf::uint32 replica() const;
  void set_replica(::google::protobuf::uint32 value);

  // optional int32 port = 4;
  bool has_port() const;
  void clear_port();
  static const int kPortFieldNumber = 4;
  ::google::protobuf::int32 port() const;
  void set_port(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MachineInfo)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_replica();
  void clear_has_replica();
  void set_has_host();
  void clear_has_host();
  void set_has_port();
  void clear_has_port();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr host_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 replica_;
  ::google::protobuf::int32 port_;
  friend struct  protobuf_cluster_5fconfig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClusterConfigProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ClusterConfigProto) */ {
 public:
  ClusterConfigProto();
  virtual ~ClusterConfigProto();

  ClusterConfigProto(const ClusterConfigProto& from);

  inline ClusterConfigProto& operator=(const ClusterConfigProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClusterConfigProto& default_instance();

  static inline const ClusterConfigProto* internal_default_instance() {
    return reinterpret_cast<const ClusterConfigProto*>(
               &_ClusterConfigProto_default_instance_);
  }

  void Swap(ClusterConfigProto* other);

  // implements Message ----------------------------------------------

  inline ClusterConfigProto* New() const PROTOBUF_FINAL { return New(NULL); }

  ClusterConfigProto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClusterConfigProto& from);
  void MergeFrom(const ClusterConfigProto& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClusterConfigProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .MachineInfo machines = 1;
  int machines_size() const;
  void clear_machines();
  static const int kMachinesFieldNumber = 1;
  const ::MachineInfo& machines(int index) const;
  ::MachineInfo* mutable_machines(int index);
  ::MachineInfo* add_machines();
  ::google::protobuf::RepeatedPtrField< ::MachineInfo >*
      mutable_machines();
  const ::google::protobuf::RepeatedPtrField< ::MachineInfo >&
      machines() const;

  // @@protoc_insertion_point(class_scope:ClusterConfigProto)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::MachineInfo > machines_;
  friend struct  protobuf_cluster_5fconfig_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// MachineInfo

// optional uint64 id = 1;
inline bool MachineInfo::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MachineInfo::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MachineInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MachineInfo::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 MachineInfo::id() const {
  // @@protoc_insertion_point(field_get:MachineInfo.id)
  return id_;
}
inline void MachineInfo::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:MachineInfo.id)
}

// optional uint32 replica = 2;
inline bool MachineInfo::has_replica() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MachineInfo::set_has_replica() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MachineInfo::clear_has_replica() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MachineInfo::clear_replica() {
  replica_ = 0u;
  clear_has_replica();
}
inline ::google::protobuf::uint32 MachineInfo::replica() const {
  // @@protoc_insertion_point(field_get:MachineInfo.replica)
  return replica_;
}
inline void MachineInfo::set_replica(::google::protobuf::uint32 value) {
  set_has_replica();
  replica_ = value;
  // @@protoc_insertion_point(field_set:MachineInfo.replica)
}

// optional string host = 3;
inline bool MachineInfo::has_host() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MachineInfo::set_has_host() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MachineInfo::clear_has_host() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MachineInfo::clear_host() {
  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_host();
}
inline const ::std::string& MachineInfo::host() const {
  // @@protoc_insertion_point(field_get:MachineInfo.host)
  return host_.GetNoArena();
}
inline void MachineInfo::set_host(const ::std::string& value) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MachineInfo.host)
}
#if LANG_CXX11
inline void MachineInfo::set_host(::std::string&& value) {
  set_has_host();
  host_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MachineInfo.host)
}
#endif
inline void MachineInfo::set_host(const char* value) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MachineInfo.host)
}
inline void MachineInfo::set_host(const char* value, size_t size) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MachineInfo.host)
}
inline ::std::string* MachineInfo::mutable_host() {
  set_has_host();
  // @@protoc_insertion_point(field_mutable:MachineInfo.host)
  return host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MachineInfo::release_host() {
  // @@protoc_insertion_point(field_release:MachineInfo.host)
  clear_has_host();
  return host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MachineInfo::set_allocated_host(::std::string* host) {
  if (host != NULL) {
    set_has_host();
  } else {
    clear_has_host();
  }
  host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host);
  // @@protoc_insertion_point(field_set_allocated:MachineInfo.host)
}

// optional int32 port = 4;
inline bool MachineInfo::has_port() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MachineInfo::set_has_port() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MachineInfo::clear_has_port() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MachineInfo::clear_port() {
  port_ = 0;
  clear_has_port();
}
inline ::google::protobuf::int32 MachineInfo::port() const {
  // @@protoc_insertion_point(field_get:MachineInfo.port)
  return port_;
}
inline void MachineInfo::set_port(::google::protobuf::int32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:MachineInfo.port)
}

// -------------------------------------------------------------------

// ClusterConfigProto

// repeated .MachineInfo machines = 1;
inline int ClusterConfigProto::machines_size() const {
  return machines_.size();
}
inline void ClusterConfigProto::clear_machines() {
  machines_.Clear();
}
inline const ::MachineInfo& ClusterConfigProto::machines(int index) const {
  // @@protoc_insertion_point(field_get:ClusterConfigProto.machines)
  return machines_.Get(index);
}
inline ::MachineInfo* ClusterConfigProto::mutable_machines(int index) {
  // @@protoc_insertion_point(field_mutable:ClusterConfigProto.machines)
  return machines_.Mutable(index);
}
inline ::MachineInfo* ClusterConfigProto::add_machines() {
  // @@protoc_insertion_point(field_add:ClusterConfigProto.machines)
  return machines_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::MachineInfo >*
ClusterConfigProto::mutable_machines() {
  // @@protoc_insertion_point(field_mutable_list:ClusterConfigProto.machines)
  return &machines_;
}
inline const ::google::protobuf::RepeatedPtrField< ::MachineInfo >&
ClusterConfigProto::machines() const {
  // @@protoc_insertion_point(field_list:ClusterConfigProto.machines)
  return machines_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cluster_5fconfig_2eproto__INCLUDED
