// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class MessageProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MessageProto> {
} _MessageProto_default_instance_;

namespace protobuf_message_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[1];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageProto, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageProto, destination_node_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageProto, destination_channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageProto, source_node_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageProto, source_channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageProto, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageProto, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageProto, data_ptr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageProto, batch_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageProto, keys_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageProto, values_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageProto, misc_bool_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageProto, misc_int_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageProto, misc_string_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageProto, misc_double_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageProto, main_channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageProto, channel_request_),
  3,
  0,
  4,
  5,
  6,
  ~0u,
  ~0u,
  7,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  1,
  2,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 20, sizeof(MessageProto)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_MessageProto_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "message.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace

void TableStruct::Shutdown() {
  _MessageProto_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _MessageProto_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\rmessage.proto\"\235\006\n\014MessageProto\022\030\n\020dest"
      "ination_node\030\001 \002(\004\022\033\n\023destination_channe"
      "l\030\002 \002(\t\022\023\n\013source_node\030\003 \001(\004\022\026\n\016source_c"
      "hannel\030\004 \001(\005\022\'\n\004type\030\t \002(\0162\031.MessageProt"
      "o.MessageType\022\014\n\004data\030\013 \003(\014\022\020\n\010data_ptr\030"
      "\014 \003(\003\022\024\n\014batch_number\030\025 \001(\004\022\014\n\004keys\030\037 \003("
      "\014\022\016\n\006values\030  \003(\014\022\021\n\tmisc_bool\030) \003(\010\022\020\n\010"
      "misc_int\030* \003(\004\022\023\n\013misc_string\030+ \003(\t\022\023\n\013m"
      "isc_double\030, \003(\001\022\025\n\014main_channel\030\351\007 \001(\t\022"
      "\030\n\017channel_request\030\352\007 \001(\t\"\253\003\n\013MessageTyp"
      "e\022\t\n\005EMPTY\020\000\022\r\n\tTXN_PROTO\020\001\022\r\n\tTXN_BATCH"
      "\020\002\022\017\n\013READ_RESULT\020\003\022\020\n\014LINK_CHANNEL\020\004\022\022\n"
      "\016UNLINK_CHANNEL\020\005\022\013\n\007TXN_PTR\020\006\022\017\n\013MESSAG"
      "E_PTR\020\007\022\020\n\014TXN_SUBBATCH\020\010\022\025\n\021PAXOS_BATCH"
      "_ORDER\020\t\022\020\n\014PAXOS_COMMIT\020\n\022\016\n\nPAXOS_DATA"
      "\020\013\022\022\n\016PAXOS_DATA_ACK\020\014\022\016\n\nBATCH_VOTE\020\r\022\017"
      "\n\013TXN_FORWORD\020\016\022\020\n\014BATCH_SUBMIT\020\017\022\021\n\rMR_"
      "TXNS_BATCH\020\020\022\020\n\014NEW_SEQUENCE\020\021\022\024\n\020NEW_SE"
      "QUENCE_ACK\020\022\022\021\n\rMASTER_LOOKUP\020\023\022\030\n\024MASTE"
      "R_LOOKUP_RESULT\020\024\022\017\n\013SYNCHRONIZE\020\025\022\023\n\017SY"
      "NCHRONIZE_ACK\020\026"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 815);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "message.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_message_2eproto

const ::google::protobuf::EnumDescriptor* MessageProto_MessageType_descriptor() {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_enum_descriptors[0];
}
bool MessageProto_MessageType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MessageProto_MessageType MessageProto::EMPTY;
const MessageProto_MessageType MessageProto::TXN_PROTO;
const MessageProto_MessageType MessageProto::TXN_BATCH;
const MessageProto_MessageType MessageProto::READ_RESULT;
const MessageProto_MessageType MessageProto::LINK_CHANNEL;
const MessageProto_MessageType MessageProto::UNLINK_CHANNEL;
const MessageProto_MessageType MessageProto::TXN_PTR;
const MessageProto_MessageType MessageProto::MESSAGE_PTR;
const MessageProto_MessageType MessageProto::TXN_SUBBATCH;
const MessageProto_MessageType MessageProto::PAXOS_BATCH_ORDER;
const MessageProto_MessageType MessageProto::PAXOS_COMMIT;
const MessageProto_MessageType MessageProto::PAXOS_DATA;
const MessageProto_MessageType MessageProto::PAXOS_DATA_ACK;
const MessageProto_MessageType MessageProto::BATCH_VOTE;
const MessageProto_MessageType MessageProto::TXN_FORWORD;
const MessageProto_MessageType MessageProto::BATCH_SUBMIT;
const MessageProto_MessageType MessageProto::MR_TXNS_BATCH;
const MessageProto_MessageType MessageProto::NEW_SEQUENCE;
const MessageProto_MessageType MessageProto::NEW_SEQUENCE_ACK;
const MessageProto_MessageType MessageProto::MASTER_LOOKUP;
const MessageProto_MessageType MessageProto::MASTER_LOOKUP_RESULT;
const MessageProto_MessageType MessageProto::SYNCHRONIZE;
const MessageProto_MessageType MessageProto::SYNCHRONIZE_ACK;
const MessageProto_MessageType MessageProto::MessageType_MIN;
const MessageProto_MessageType MessageProto::MessageType_MAX;
const int MessageProto::MessageType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageProto::kDestinationNodeFieldNumber;
const int MessageProto::kDestinationChannelFieldNumber;
const int MessageProto::kSourceNodeFieldNumber;
const int MessageProto::kSourceChannelFieldNumber;
const int MessageProto::kTypeFieldNumber;
const int MessageProto::kDataFieldNumber;
const int MessageProto::kDataPtrFieldNumber;
const int MessageProto::kBatchNumberFieldNumber;
const int MessageProto::kKeysFieldNumber;
const int MessageProto::kValuesFieldNumber;
const int MessageProto::kMiscBoolFieldNumber;
const int MessageProto::kMiscIntFieldNumber;
const int MessageProto::kMiscStringFieldNumber;
const int MessageProto::kMiscDoubleFieldNumber;
const int MessageProto::kMainChannelFieldNumber;
const int MessageProto::kChannelRequestFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageProto::MessageProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_message_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MessageProto)
}
MessageProto::MessageProto(const MessageProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      data_(from.data_),
      data_ptr_(from.data_ptr_),
      keys_(from.keys_),
      values_(from.values_),
      misc_bool_(from.misc_bool_),
      misc_int_(from.misc_int_),
      misc_string_(from.misc_string_),
      misc_double_(from.misc_double_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  destination_channel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_destination_channel()) {
    destination_channel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.destination_channel_);
  }
  main_channel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_main_channel()) {
    main_channel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.main_channel_);
  }
  channel_request_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_channel_request()) {
    channel_request_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_request_);
  }
  ::memcpy(&destination_node_, &from.destination_node_,
    reinterpret_cast<char*>(&batch_number_) -
    reinterpret_cast<char*>(&destination_node_) + sizeof(batch_number_));
  // @@protoc_insertion_point(copy_constructor:MessageProto)
}

void MessageProto::SharedCtor() {
  _cached_size_ = 0;
  destination_channel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  main_channel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_request_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&destination_node_, 0, reinterpret_cast<char*>(&batch_number_) -
    reinterpret_cast<char*>(&destination_node_) + sizeof(batch_number_));
}

MessageProto::~MessageProto() {
  // @@protoc_insertion_point(destructor:MessageProto)
  SharedDtor();
}

void MessageProto::SharedDtor() {
  destination_channel_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  main_channel_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_request_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MessageProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageProto::descriptor() {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_metadata[0].descriptor;
}

const MessageProto& MessageProto::default_instance() {
  protobuf_message_2eproto::InitDefaults();
  return *internal_default_instance();
}

MessageProto* MessageProto::New(::google::protobuf::Arena* arena) const {
  MessageProto* n = new MessageProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageProto::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageProto)
  data_.Clear();
  data_ptr_.Clear();
  keys_.Clear();
  values_.Clear();
  misc_bool_.Clear();
  misc_int_.Clear();
  misc_string_.Clear();
  misc_double_.Clear();
  if (_has_bits_[0 / 32] & 7u) {
    if (has_destination_channel()) {
      GOOGLE_DCHECK(!destination_channel_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*destination_channel_.UnsafeRawStringPointer())->clear();
    }
    if (has_main_channel()) {
      GOOGLE_DCHECK(!main_channel_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*main_channel_.UnsafeRawStringPointer())->clear();
    }
    if (has_channel_request()) {
      GOOGLE_DCHECK(!channel_request_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*channel_request_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 248u) {
    ::memset(&destination_node_, 0, reinterpret_cast<char*>(&batch_number_) -
      reinterpret_cast<char*>(&destination_node_) + sizeof(batch_number_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MessageProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MessageProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 destination_node = 1;
      case 1: {
        if (tag == 8u) {
          set_has_destination_node();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &destination_node_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string destination_channel = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_destination_channel()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->destination_channel().data(), this->destination_channel().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MessageProto.destination_channel");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 source_node = 3;
      case 3: {
        if (tag == 24u) {
          set_has_source_node();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &source_node_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 source_channel = 4;
      case 4: {
        if (tag == 32u) {
          set_has_source_channel();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &source_channel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .MessageProto.MessageType type = 9;
      case 9: {
        if (tag == 72u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::MessageProto_MessageType_IsValid(value)) {
            set_type(static_cast< ::MessageProto_MessageType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(9, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes data = 11;
      case 11: {
        if (tag == 90u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 data_ptr = 12;
      case 12: {
        if (tag == 96u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 96u, input, this->mutable_data_ptr())));
        } else if (tag == 98u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_data_ptr())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 batch_number = 21;
      case 21: {
        if (tag == 168u) {
          set_has_batch_number();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &batch_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes keys = 31;
      case 31: {
        if (tag == 250u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_keys()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes values = 32;
      case 32: {
        if (tag == 258u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_values()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bool misc_bool = 41;
      case 41: {
        if (tag == 328u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 2, 328u, input, this->mutable_misc_bool())));
        } else if (tag == 330u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_misc_bool())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 misc_int = 42;
      case 42: {
        if (tag == 336u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 2, 336u, input, this->mutable_misc_int())));
        } else if (tag == 338u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_misc_int())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string misc_string = 43;
      case 43: {
        if (tag == 346u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_misc_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->misc_string(this->misc_string_size() - 1).data(),
            this->misc_string(this->misc_string_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MessageProto.misc_string");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double misc_double = 44;
      case 44: {
        if (tag == 353u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 2, 353u, input, this->mutable_misc_double())));
        } else if (tag == 354u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_misc_double())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string main_channel = 1001;
      case 1001: {
        if (tag == 8010u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_main_channel()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->main_channel().data(), this->main_channel().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MessageProto.main_channel");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string channel_request = 1002;
      case 1002: {
        if (tag == 8018u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_channel_request()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->channel_request().data(), this->channel_request().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MessageProto.channel_request");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MessageProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MessageProto)
  return false;
#undef DO_
}

void MessageProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MessageProto)
  // required uint64 destination_node = 1;
  if (has_destination_node()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->destination_node(), output);
  }

  // required string destination_channel = 2;
  if (has_destination_channel()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->destination_channel().data(), this->destination_channel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MessageProto.destination_channel");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->destination_channel(), output);
  }

  // optional uint64 source_node = 3;
  if (has_source_node()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->source_node(), output);
  }

  // optional int32 source_channel = 4;
  if (has_source_channel()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->source_channel(), output);
  }

  // required .MessageProto.MessageType type = 9;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->type(), output);
  }

  // repeated bytes data = 11;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      11, this->data(i), output);
  }

  // repeated int64 data_ptr = 12;
  for (int i = 0; i < this->data_ptr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      12, this->data_ptr(i), output);
  }

  // optional uint64 batch_number = 21;
  if (has_batch_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(21, this->batch_number(), output);
  }

  // repeated bytes keys = 31;
  for (int i = 0; i < this->keys_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      31, this->keys(i), output);
  }

  // repeated bytes values = 32;
  for (int i = 0; i < this->values_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      32, this->values(i), output);
  }

  // repeated bool misc_bool = 41;
  for (int i = 0; i < this->misc_bool_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(
      41, this->misc_bool(i), output);
  }

  // repeated uint64 misc_int = 42;
  for (int i = 0; i < this->misc_int_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      42, this->misc_int(i), output);
  }

  // repeated string misc_string = 43;
  for (int i = 0; i < this->misc_string_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->misc_string(i).data(), this->misc_string(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MessageProto.misc_string");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      43, this->misc_string(i), output);
  }

  // repeated double misc_double = 44;
  for (int i = 0; i < this->misc_double_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      44, this->misc_double(i), output);
  }

  // optional string main_channel = 1001;
  if (has_main_channel()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->main_channel().data(), this->main_channel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MessageProto.main_channel");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1001, this->main_channel(), output);
  }

  // optional string channel_request = 1002;
  if (has_channel_request()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->channel_request().data(), this->channel_request().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MessageProto.channel_request");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1002, this->channel_request(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MessageProto)
}

::google::protobuf::uint8* MessageProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MessageProto)
  // required uint64 destination_node = 1;
  if (has_destination_node()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->destination_node(), target);
  }

  // required string destination_channel = 2;
  if (has_destination_channel()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->destination_channel().data(), this->destination_channel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MessageProto.destination_channel");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->destination_channel(), target);
  }

  // optional uint64 source_node = 3;
  if (has_source_node()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->source_node(), target);
  }

  // optional int32 source_channel = 4;
  if (has_source_channel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->source_channel(), target);
  }

  // required .MessageProto.MessageType type = 9;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->type(), target);
  }

  // repeated bytes data = 11;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(11, this->data(i), target);
  }

  // repeated int64 data_ptr = 12;
  for (int i = 0; i < this->data_ptr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(12, this->data_ptr(i), target);
  }

  // optional uint64 batch_number = 21;
  if (has_batch_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(21, this->batch_number(), target);
  }

  // repeated bytes keys = 31;
  for (int i = 0; i < this->keys_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(31, this->keys(i), target);
  }

  // repeated bytes values = 32;
  for (int i = 0; i < this->values_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(32, this->values(i), target);
  }

  // repeated bool misc_bool = 41;
  for (int i = 0; i < this->misc_bool_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolToArray(41, this->misc_bool(i), target);
  }

  // repeated uint64 misc_int = 42;
  for (int i = 0; i < this->misc_int_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(42, this->misc_int(i), target);
  }

  // repeated string misc_string = 43;
  for (int i = 0; i < this->misc_string_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->misc_string(i).data(), this->misc_string(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MessageProto.misc_string");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(43, this->misc_string(i), target);
  }

  // repeated double misc_double = 44;
  for (int i = 0; i < this->misc_double_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(44, this->misc_double(i), target);
  }

  // optional string main_channel = 1001;
  if (has_main_channel()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->main_channel().data(), this->main_channel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MessageProto.main_channel");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1001, this->main_channel(), target);
  }

  // optional string channel_request = 1002;
  if (has_channel_request()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->channel_request().data(), this->channel_request().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MessageProto.channel_request");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1002, this->channel_request(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MessageProto)
  return target;
}

size_t MessageProto::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MessageProto)
  size_t total_size = 0;

  if (has_destination_channel()) {
    // required string destination_channel = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->destination_channel());
  }

  if (has_destination_node()) {
    // required uint64 destination_node = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->destination_node());
  }

  if (has_type()) {
    // required .MessageProto.MessageType type = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  return total_size;
}
size_t MessageProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000049) ^ 0x00000049) == 0) {  // All required fields are present.
    // required string destination_channel = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->destination_channel());

    // required uint64 destination_node = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->destination_node());

    // required .MessageProto.MessageType type = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated bytes data = 11;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->data_size());
  for (int i = 0; i < this->data_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->data(i));
  }

  // repeated int64 data_ptr = 12;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->data_ptr_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->data_ptr_size());
    total_size += data_size;
  }

  // repeated bytes keys = 31;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->keys_size());
  for (int i = 0; i < this->keys_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->keys(i));
  }

  // repeated bytes values = 32;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->values_size());
  for (int i = 0; i < this->values_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->values(i));
  }

  // repeated bool misc_bool = 41;
  {
    unsigned int count = this->misc_bool_size();
    size_t data_size = 1UL * count;
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->misc_bool_size());
    total_size += data_size;
  }

  // repeated uint64 misc_int = 42;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->misc_int_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->misc_int_size());
    total_size += data_size;
  }

  // repeated string misc_string = 43;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->misc_string_size());
  for (int i = 0; i < this->misc_string_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->misc_string(i));
  }

  // repeated double misc_double = 44;
  {
    unsigned int count = this->misc_double_size();
    size_t data_size = 8UL * count;
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->misc_double_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 6u) {
    // optional string main_channel = 1001;
    if (has_main_channel()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->main_channel());
    }

    // optional string channel_request = 1002;
    if (has_channel_request()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->channel_request());
    }

  }
  if (_has_bits_[0 / 32] & 48u) {
    // optional uint64 source_node = 3;
    if (has_source_node()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->source_node());
    }

    // optional int32 source_channel = 4;
    if (has_source_channel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->source_channel());
    }

  }
  // optional uint64 batch_number = 21;
  if (has_batch_number()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->batch_number());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MessageProto)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MessageProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MessageProto)
    MergeFrom(*source);
  }
}

void MessageProto::MergeFrom(const MessageProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MessageProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.MergeFrom(from.data_);
  data_ptr_.MergeFrom(from.data_ptr_);
  keys_.MergeFrom(from.keys_);
  values_.MergeFrom(from.values_);
  misc_bool_.MergeFrom(from.misc_bool_);
  misc_int_.MergeFrom(from.misc_int_);
  misc_string_.MergeFrom(from.misc_string_);
  misc_double_.MergeFrom(from.misc_double_);
  if (from._has_bits_[0 / 32] & 255u) {
    if (from.has_destination_channel()) {
      set_has_destination_channel();
      destination_channel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.destination_channel_);
    }
    if (from.has_main_channel()) {
      set_has_main_channel();
      main_channel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.main_channel_);
    }
    if (from.has_channel_request()) {
      set_has_channel_request();
      channel_request_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_request_);
    }
    if (from.has_destination_node()) {
      set_destination_node(from.destination_node());
    }
    if (from.has_source_node()) {
      set_source_node(from.source_node());
    }
    if (from.has_source_channel()) {
      set_source_channel(from.source_channel());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_batch_number()) {
      set_batch_number(from.batch_number());
    }
  }
}

void MessageProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MessageProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageProto::CopyFrom(const MessageProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000049) != 0x00000049) return false;
  return true;
}

void MessageProto::Swap(MessageProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageProto::InternalSwap(MessageProto* other) {
  data_.UnsafeArenaSwap(&other->data_);
  data_ptr_.UnsafeArenaSwap(&other->data_ptr_);
  keys_.UnsafeArenaSwap(&other->keys_);
  values_.UnsafeArenaSwap(&other->values_);
  misc_bool_.UnsafeArenaSwap(&other->misc_bool_);
  misc_int_.UnsafeArenaSwap(&other->misc_int_);
  misc_string_.UnsafeArenaSwap(&other->misc_string_);
  misc_double_.UnsafeArenaSwap(&other->misc_double_);
  destination_channel_.Swap(&other->destination_channel_);
  main_channel_.Swap(&other->main_channel_);
  channel_request_.Swap(&other->channel_request_);
  std::swap(destination_node_, other->destination_node_);
  std::swap(source_node_, other->source_node_);
  std::swap(source_channel_, other->source_channel_);
  std::swap(type_, other->type_);
  std::swap(batch_number_, other->batch_number_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageProto::GetMetadata() const {
  protobuf_message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_message_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageProto

// required uint64 destination_node = 1;
bool MessageProto::has_destination_node() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void MessageProto::set_has_destination_node() {
  _has_bits_[0] |= 0x00000008u;
}
void MessageProto::clear_has_destination_node() {
  _has_bits_[0] &= ~0x00000008u;
}
void MessageProto::clear_destination_node() {
  destination_node_ = GOOGLE_ULONGLONG(0);
  clear_has_destination_node();
}
::google::protobuf::uint64 MessageProto::destination_node() const {
  // @@protoc_insertion_point(field_get:MessageProto.destination_node)
  return destination_node_;
}
void MessageProto::set_destination_node(::google::protobuf::uint64 value) {
  set_has_destination_node();
  destination_node_ = value;
  // @@protoc_insertion_point(field_set:MessageProto.destination_node)
}

// required string destination_channel = 2;
bool MessageProto::has_destination_channel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MessageProto::set_has_destination_channel() {
  _has_bits_[0] |= 0x00000001u;
}
void MessageProto::clear_has_destination_channel() {
  _has_bits_[0] &= ~0x00000001u;
}
void MessageProto::clear_destination_channel() {
  destination_channel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_destination_channel();
}
const ::std::string& MessageProto::destination_channel() const {
  // @@protoc_insertion_point(field_get:MessageProto.destination_channel)
  return destination_channel_.GetNoArena();
}
void MessageProto::set_destination_channel(const ::std::string& value) {
  set_has_destination_channel();
  destination_channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageProto.destination_channel)
}
#if LANG_CXX11
void MessageProto::set_destination_channel(::std::string&& value) {
  set_has_destination_channel();
  destination_channel_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageProto.destination_channel)
}
#endif
void MessageProto::set_destination_channel(const char* value) {
  set_has_destination_channel();
  destination_channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageProto.destination_channel)
}
void MessageProto::set_destination_channel(const char* value, size_t size) {
  set_has_destination_channel();
  destination_channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageProto.destination_channel)
}
::std::string* MessageProto::mutable_destination_channel() {
  set_has_destination_channel();
  // @@protoc_insertion_point(field_mutable:MessageProto.destination_channel)
  return destination_channel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MessageProto::release_destination_channel() {
  // @@protoc_insertion_point(field_release:MessageProto.destination_channel)
  clear_has_destination_channel();
  return destination_channel_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MessageProto::set_allocated_destination_channel(::std::string* destination_channel) {
  if (destination_channel != NULL) {
    set_has_destination_channel();
  } else {
    clear_has_destination_channel();
  }
  destination_channel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), destination_channel);
  // @@protoc_insertion_point(field_set_allocated:MessageProto.destination_channel)
}

// optional uint64 source_node = 3;
bool MessageProto::has_source_node() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void MessageProto::set_has_source_node() {
  _has_bits_[0] |= 0x00000010u;
}
void MessageProto::clear_has_source_node() {
  _has_bits_[0] &= ~0x00000010u;
}
void MessageProto::clear_source_node() {
  source_node_ = GOOGLE_ULONGLONG(0);
  clear_has_source_node();
}
::google::protobuf::uint64 MessageProto::source_node() const {
  // @@protoc_insertion_point(field_get:MessageProto.source_node)
  return source_node_;
}
void MessageProto::set_source_node(::google::protobuf::uint64 value) {
  set_has_source_node();
  source_node_ = value;
  // @@protoc_insertion_point(field_set:MessageProto.source_node)
}

// optional int32 source_channel = 4;
bool MessageProto::has_source_channel() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void MessageProto::set_has_source_channel() {
  _has_bits_[0] |= 0x00000020u;
}
void MessageProto::clear_has_source_channel() {
  _has_bits_[0] &= ~0x00000020u;
}
void MessageProto::clear_source_channel() {
  source_channel_ = 0;
  clear_has_source_channel();
}
::google::protobuf::int32 MessageProto::source_channel() const {
  // @@protoc_insertion_point(field_get:MessageProto.source_channel)
  return source_channel_;
}
void MessageProto::set_source_channel(::google::protobuf::int32 value) {
  set_has_source_channel();
  source_channel_ = value;
  // @@protoc_insertion_point(field_set:MessageProto.source_channel)
}

// required .MessageProto.MessageType type = 9;
bool MessageProto::has_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void MessageProto::set_has_type() {
  _has_bits_[0] |= 0x00000040u;
}
void MessageProto::clear_has_type() {
  _has_bits_[0] &= ~0x00000040u;
}
void MessageProto::clear_type() {
  type_ = 0;
  clear_has_type();
}
::MessageProto_MessageType MessageProto::type() const {
  // @@protoc_insertion_point(field_get:MessageProto.type)
  return static_cast< ::MessageProto_MessageType >(type_);
}
void MessageProto::set_type(::MessageProto_MessageType value) {
  assert(::MessageProto_MessageType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:MessageProto.type)
}

// repeated bytes data = 11;
int MessageProto::data_size() const {
  return data_.size();
}
void MessageProto::clear_data() {
  data_.Clear();
}
const ::std::string& MessageProto::data(int index) const {
  // @@protoc_insertion_point(field_get:MessageProto.data)
  return data_.Get(index);
}
::std::string* MessageProto::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:MessageProto.data)
  return data_.Mutable(index);
}
void MessageProto::set_data(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:MessageProto.data)
  data_.Mutable(index)->assign(value);
}
void MessageProto::set_data(int index, const char* value) {
  data_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:MessageProto.data)
}
void MessageProto::set_data(int index, const void* value, size_t size) {
  data_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MessageProto.data)
}
::std::string* MessageProto::add_data() {
  // @@protoc_insertion_point(field_add_mutable:MessageProto.data)
  return data_.Add();
}
void MessageProto::add_data(const ::std::string& value) {
  data_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:MessageProto.data)
}
void MessageProto::add_data(const char* value) {
  data_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:MessageProto.data)
}
void MessageProto::add_data(const void* value, size_t size) {
  data_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:MessageProto.data)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
MessageProto::data() const {
  // @@protoc_insertion_point(field_list:MessageProto.data)
  return data_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
MessageProto::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:MessageProto.data)
  return &data_;
}

// repeated int64 data_ptr = 12;
int MessageProto::data_ptr_size() const {
  return data_ptr_.size();
}
void MessageProto::clear_data_ptr() {
  data_ptr_.Clear();
}
::google::protobuf::int64 MessageProto::data_ptr(int index) const {
  // @@protoc_insertion_point(field_get:MessageProto.data_ptr)
  return data_ptr_.Get(index);
}
void MessageProto::set_data_ptr(int index, ::google::protobuf::int64 value) {
  data_ptr_.Set(index, value);
  // @@protoc_insertion_point(field_set:MessageProto.data_ptr)
}
void MessageProto::add_data_ptr(::google::protobuf::int64 value) {
  data_ptr_.Add(value);
  // @@protoc_insertion_point(field_add:MessageProto.data_ptr)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
MessageProto::data_ptr() const {
  // @@protoc_insertion_point(field_list:MessageProto.data_ptr)
  return data_ptr_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
MessageProto::mutable_data_ptr() {
  // @@protoc_insertion_point(field_mutable_list:MessageProto.data_ptr)
  return &data_ptr_;
}

// optional uint64 batch_number = 21;
bool MessageProto::has_batch_number() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void MessageProto::set_has_batch_number() {
  _has_bits_[0] |= 0x00000080u;
}
void MessageProto::clear_has_batch_number() {
  _has_bits_[0] &= ~0x00000080u;
}
void MessageProto::clear_batch_number() {
  batch_number_ = GOOGLE_ULONGLONG(0);
  clear_has_batch_number();
}
::google::protobuf::uint64 MessageProto::batch_number() const {
  // @@protoc_insertion_point(field_get:MessageProto.batch_number)
  return batch_number_;
}
void MessageProto::set_batch_number(::google::protobuf::uint64 value) {
  set_has_batch_number();
  batch_number_ = value;
  // @@protoc_insertion_point(field_set:MessageProto.batch_number)
}

// repeated bytes keys = 31;
int MessageProto::keys_size() const {
  return keys_.size();
}
void MessageProto::clear_keys() {
  keys_.Clear();
}
const ::std::string& MessageProto::keys(int index) const {
  // @@protoc_insertion_point(field_get:MessageProto.keys)
  return keys_.Get(index);
}
::std::string* MessageProto::mutable_keys(int index) {
  // @@protoc_insertion_point(field_mutable:MessageProto.keys)
  return keys_.Mutable(index);
}
void MessageProto::set_keys(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:MessageProto.keys)
  keys_.Mutable(index)->assign(value);
}
void MessageProto::set_keys(int index, const char* value) {
  keys_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:MessageProto.keys)
}
void MessageProto::set_keys(int index, const void* value, size_t size) {
  keys_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MessageProto.keys)
}
::std::string* MessageProto::add_keys() {
  // @@protoc_insertion_point(field_add_mutable:MessageProto.keys)
  return keys_.Add();
}
void MessageProto::add_keys(const ::std::string& value) {
  keys_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:MessageProto.keys)
}
void MessageProto::add_keys(const char* value) {
  keys_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:MessageProto.keys)
}
void MessageProto::add_keys(const void* value, size_t size) {
  keys_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:MessageProto.keys)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
MessageProto::keys() const {
  // @@protoc_insertion_point(field_list:MessageProto.keys)
  return keys_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
MessageProto::mutable_keys() {
  // @@protoc_insertion_point(field_mutable_list:MessageProto.keys)
  return &keys_;
}

// repeated bytes values = 32;
int MessageProto::values_size() const {
  return values_.size();
}
void MessageProto::clear_values() {
  values_.Clear();
}
const ::std::string& MessageProto::values(int index) const {
  // @@protoc_insertion_point(field_get:MessageProto.values)
  return values_.Get(index);
}
::std::string* MessageProto::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:MessageProto.values)
  return values_.Mutable(index);
}
void MessageProto::set_values(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:MessageProto.values)
  values_.Mutable(index)->assign(value);
}
void MessageProto::set_values(int index, const char* value) {
  values_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:MessageProto.values)
}
void MessageProto::set_values(int index, const void* value, size_t size) {
  values_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MessageProto.values)
}
::std::string* MessageProto::add_values() {
  // @@protoc_insertion_point(field_add_mutable:MessageProto.values)
  return values_.Add();
}
void MessageProto::add_values(const ::std::string& value) {
  values_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:MessageProto.values)
}
void MessageProto::add_values(const char* value) {
  values_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:MessageProto.values)
}
void MessageProto::add_values(const void* value, size_t size) {
  values_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:MessageProto.values)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
MessageProto::values() const {
  // @@protoc_insertion_point(field_list:MessageProto.values)
  return values_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
MessageProto::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:MessageProto.values)
  return &values_;
}

// repeated bool misc_bool = 41;
int MessageProto::misc_bool_size() const {
  return misc_bool_.size();
}
void MessageProto::clear_misc_bool() {
  misc_bool_.Clear();
}
bool MessageProto::misc_bool(int index) const {
  // @@protoc_insertion_point(field_get:MessageProto.misc_bool)
  return misc_bool_.Get(index);
}
void MessageProto::set_misc_bool(int index, bool value) {
  misc_bool_.Set(index, value);
  // @@protoc_insertion_point(field_set:MessageProto.misc_bool)
}
void MessageProto::add_misc_bool(bool value) {
  misc_bool_.Add(value);
  // @@protoc_insertion_point(field_add:MessageProto.misc_bool)
}
const ::google::protobuf::RepeatedField< bool >&
MessageProto::misc_bool() const {
  // @@protoc_insertion_point(field_list:MessageProto.misc_bool)
  return misc_bool_;
}
::google::protobuf::RepeatedField< bool >*
MessageProto::mutable_misc_bool() {
  // @@protoc_insertion_point(field_mutable_list:MessageProto.misc_bool)
  return &misc_bool_;
}

// repeated uint64 misc_int = 42;
int MessageProto::misc_int_size() const {
  return misc_int_.size();
}
void MessageProto::clear_misc_int() {
  misc_int_.Clear();
}
::google::protobuf::uint64 MessageProto::misc_int(int index) const {
  // @@protoc_insertion_point(field_get:MessageProto.misc_int)
  return misc_int_.Get(index);
}
void MessageProto::set_misc_int(int index, ::google::protobuf::uint64 value) {
  misc_int_.Set(index, value);
  // @@protoc_insertion_point(field_set:MessageProto.misc_int)
}
void MessageProto::add_misc_int(::google::protobuf::uint64 value) {
  misc_int_.Add(value);
  // @@protoc_insertion_point(field_add:MessageProto.misc_int)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
MessageProto::misc_int() const {
  // @@protoc_insertion_point(field_list:MessageProto.misc_int)
  return misc_int_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
MessageProto::mutable_misc_int() {
  // @@protoc_insertion_point(field_mutable_list:MessageProto.misc_int)
  return &misc_int_;
}

// repeated string misc_string = 43;
int MessageProto::misc_string_size() const {
  return misc_string_.size();
}
void MessageProto::clear_misc_string() {
  misc_string_.Clear();
}
const ::std::string& MessageProto::misc_string(int index) const {
  // @@protoc_insertion_point(field_get:MessageProto.misc_string)
  return misc_string_.Get(index);
}
::std::string* MessageProto::mutable_misc_string(int index) {
  // @@protoc_insertion_point(field_mutable:MessageProto.misc_string)
  return misc_string_.Mutable(index);
}
void MessageProto::set_misc_string(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:MessageProto.misc_string)
  misc_string_.Mutable(index)->assign(value);
}
void MessageProto::set_misc_string(int index, const char* value) {
  misc_string_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:MessageProto.misc_string)
}
void MessageProto::set_misc_string(int index, const char* value, size_t size) {
  misc_string_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MessageProto.misc_string)
}
::std::string* MessageProto::add_misc_string() {
  // @@protoc_insertion_point(field_add_mutable:MessageProto.misc_string)
  return misc_string_.Add();
}
void MessageProto::add_misc_string(const ::std::string& value) {
  misc_string_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:MessageProto.misc_string)
}
void MessageProto::add_misc_string(const char* value) {
  misc_string_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:MessageProto.misc_string)
}
void MessageProto::add_misc_string(const char* value, size_t size) {
  misc_string_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:MessageProto.misc_string)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
MessageProto::misc_string() const {
  // @@protoc_insertion_point(field_list:MessageProto.misc_string)
  return misc_string_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
MessageProto::mutable_misc_string() {
  // @@protoc_insertion_point(field_mutable_list:MessageProto.misc_string)
  return &misc_string_;
}

// repeated double misc_double = 44;
int MessageProto::misc_double_size() const {
  return misc_double_.size();
}
void MessageProto::clear_misc_double() {
  misc_double_.Clear();
}
double MessageProto::misc_double(int index) const {
  // @@protoc_insertion_point(field_get:MessageProto.misc_double)
  return misc_double_.Get(index);
}
void MessageProto::set_misc_double(int index, double value) {
  misc_double_.Set(index, value);
  // @@protoc_insertion_point(field_set:MessageProto.misc_double)
}
void MessageProto::add_misc_double(double value) {
  misc_double_.Add(value);
  // @@protoc_insertion_point(field_add:MessageProto.misc_double)
}
const ::google::protobuf::RepeatedField< double >&
MessageProto::misc_double() const {
  // @@protoc_insertion_point(field_list:MessageProto.misc_double)
  return misc_double_;
}
::google::protobuf::RepeatedField< double >*
MessageProto::mutable_misc_double() {
  // @@protoc_insertion_point(field_mutable_list:MessageProto.misc_double)
  return &misc_double_;
}

// optional string main_channel = 1001;
bool MessageProto::has_main_channel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MessageProto::set_has_main_channel() {
  _has_bits_[0] |= 0x00000002u;
}
void MessageProto::clear_has_main_channel() {
  _has_bits_[0] &= ~0x00000002u;
}
void MessageProto::clear_main_channel() {
  main_channel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_main_channel();
}
const ::std::string& MessageProto::main_channel() const {
  // @@protoc_insertion_point(field_get:MessageProto.main_channel)
  return main_channel_.GetNoArena();
}
void MessageProto::set_main_channel(const ::std::string& value) {
  set_has_main_channel();
  main_channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageProto.main_channel)
}
#if LANG_CXX11
void MessageProto::set_main_channel(::std::string&& value) {
  set_has_main_channel();
  main_channel_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageProto.main_channel)
}
#endif
void MessageProto::set_main_channel(const char* value) {
  set_has_main_channel();
  main_channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageProto.main_channel)
}
void MessageProto::set_main_channel(const char* value, size_t size) {
  set_has_main_channel();
  main_channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageProto.main_channel)
}
::std::string* MessageProto::mutable_main_channel() {
  set_has_main_channel();
  // @@protoc_insertion_point(field_mutable:MessageProto.main_channel)
  return main_channel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MessageProto::release_main_channel() {
  // @@protoc_insertion_point(field_release:MessageProto.main_channel)
  clear_has_main_channel();
  return main_channel_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MessageProto::set_allocated_main_channel(::std::string* main_channel) {
  if (main_channel != NULL) {
    set_has_main_channel();
  } else {
    clear_has_main_channel();
  }
  main_channel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), main_channel);
  // @@protoc_insertion_point(field_set_allocated:MessageProto.main_channel)
}

// optional string channel_request = 1002;
bool MessageProto::has_channel_request() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void MessageProto::set_has_channel_request() {
  _has_bits_[0] |= 0x00000004u;
}
void MessageProto::clear_has_channel_request() {
  _has_bits_[0] &= ~0x00000004u;
}
void MessageProto::clear_channel_request() {
  channel_request_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_channel_request();
}
const ::std::string& MessageProto::channel_request() const {
  // @@protoc_insertion_point(field_get:MessageProto.channel_request)
  return channel_request_.GetNoArena();
}
void MessageProto::set_channel_request(const ::std::string& value) {
  set_has_channel_request();
  channel_request_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessageProto.channel_request)
}
#if LANG_CXX11
void MessageProto::set_channel_request(::std::string&& value) {
  set_has_channel_request();
  channel_request_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessageProto.channel_request)
}
#endif
void MessageProto::set_channel_request(const char* value) {
  set_has_channel_request();
  channel_request_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessageProto.channel_request)
}
void MessageProto::set_channel_request(const char* value, size_t size) {
  set_has_channel_request();
  channel_request_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessageProto.channel_request)
}
::std::string* MessageProto::mutable_channel_request() {
  set_has_channel_request();
  // @@protoc_insertion_point(field_mutable:MessageProto.channel_request)
  return channel_request_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MessageProto::release_channel_request() {
  // @@protoc_insertion_point(field_release:MessageProto.channel_request)
  clear_has_channel_request();
  return channel_request_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MessageProto::set_allocated_channel_request(::std::string* channel_request) {
  if (channel_request != NULL) {
    set_has_channel_request();
  } else {
    clear_has_channel_request();
  }
  channel_request_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), channel_request);
  // @@protoc_insertion_point(field_set_allocated:MessageProto.channel_request)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
