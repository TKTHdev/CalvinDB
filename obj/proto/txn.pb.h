// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: txn.proto

#ifndef PROTOBUF_txn_2eproto__INCLUDED
#define PROTOBUF_txn_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
class KeyEntries;
class KeyEntriesDefaultTypeInternal;
extern KeyEntriesDefaultTypeInternal _KeyEntries_default_instance_;
class KeyEntry;
class KeyEntryDefaultTypeInternal;
extern KeyEntryDefaultTypeInternal _KeyEntry_default_instance_;
class LookupMasterEntry;
class LookupMasterEntryDefaultTypeInternal;
extern LookupMasterEntryDefaultTypeInternal _LookupMasterEntry_default_instance_;
class LookupMasterResultEntry;
class LookupMasterResultEntryDefaultTypeInternal;
extern LookupMasterResultEntryDefaultTypeInternal _LookupMasterResultEntry_default_instance_;
class RemoteResultsEntries;
class RemoteResultsEntriesDefaultTypeInternal;
extern RemoteResultsEntriesDefaultTypeInternal _RemoteResultsEntries_default_instance_;
class RemoteResultsEntry;
class RemoteResultsEntryDefaultTypeInternal;
extern RemoteResultsEntryDefaultTypeInternal _RemoteResultsEntry_default_instance_;
class TxnProto;
class TxnProtoDefaultTypeInternal;
extern TxnProtoDefaultTypeInternal _TxnProto_default_instance_;

namespace protobuf_txn_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_txn_2eproto

enum TxnProto_Status {
  TxnProto_Status_NEW = 0,
  TxnProto_Status_ACTIVE = 1,
  TxnProto_Status_COMMITTED = 2,
  TxnProto_Status_ABORTED = 3,
  TxnProto_Status_ABORTED_WITHOUT_LOCK = 4
};
bool TxnProto_Status_IsValid(int value);
const TxnProto_Status TxnProto_Status_Status_MIN = TxnProto_Status_NEW;
const TxnProto_Status TxnProto_Status_Status_MAX = TxnProto_Status_ABORTED_WITHOUT_LOCK;
const int TxnProto_Status_Status_ARRAYSIZE = TxnProto_Status_Status_MAX + 1;

const ::google::protobuf::EnumDescriptor* TxnProto_Status_descriptor();
inline const ::std::string& TxnProto_Status_Name(TxnProto_Status value) {
  return ::google::protobuf::internal::NameOfEnum(
    TxnProto_Status_descriptor(), value);
}
inline bool TxnProto_Status_Parse(
    const ::std::string& name, TxnProto_Status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TxnProto_Status>(
    TxnProto_Status_descriptor(), name, value);
}
// ===================================================================

class KeyEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KeyEntry) */ {
 public:
  KeyEntry();
  virtual ~KeyEntry();

  KeyEntry(const KeyEntry& from);

  inline KeyEntry& operator=(const KeyEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KeyEntry& default_instance();

  static inline const KeyEntry* internal_default_instance() {
    return reinterpret_cast<const KeyEntry*>(
               &_KeyEntry_default_instance_);
  }

  void Swap(KeyEntry* other);

  // implements Message ----------------------------------------------

  inline KeyEntry* New() const PROTOBUF_FINAL { return New(NULL); }

  KeyEntry* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const KeyEntry& from);
  void MergeFrom(const KeyEntry& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(KeyEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const void* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // required uint64 counter = 3;
  bool has_counter() const;
  void clear_counter();
  static const int kCounterFieldNumber = 3;
  ::google::protobuf::uint64 counter() const;
  void set_counter(::google::protobuf::uint64 value);

  // required uint32 master = 2;
  bool has_master() const;
  void clear_master();
  static const int kMasterFieldNumber = 2;
  ::google::protobuf::uint32 master() const;
  void set_master(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KeyEntry)
 private:
  void set_has_key();
  void clear_has_key();
  void set_has_master();
  void clear_has_master();
  void set_has_counter();
  void clear_has_counter();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::uint64 counter_;
  ::google::protobuf::uint32 master_;
  friend struct  protobuf_txn_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class KeyEntries : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KeyEntries) */ {
 public:
  KeyEntries();
  virtual ~KeyEntries();

  KeyEntries(const KeyEntries& from);

  inline KeyEntries& operator=(const KeyEntries& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KeyEntries& default_instance();

  static inline const KeyEntries* internal_default_instance() {
    return reinterpret_cast<const KeyEntries*>(
               &_KeyEntries_default_instance_);
  }

  void Swap(KeyEntries* other);

  // implements Message ----------------------------------------------

  inline KeyEntries* New() const PROTOBUF_FINAL { return New(NULL); }

  KeyEntries* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const KeyEntries& from);
  void MergeFrom(const KeyEntries& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(KeyEntries* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .KeyEntry entries = 1;
  int entries_size() const;
  void clear_entries();
  static const int kEntriesFieldNumber = 1;
  const ::KeyEntry& entries(int index) const;
  ::KeyEntry* mutable_entries(int index);
  ::KeyEntry* add_entries();
  ::google::protobuf::RepeatedPtrField< ::KeyEntry >*
      mutable_entries();
  const ::google::protobuf::RepeatedPtrField< ::KeyEntry >&
      entries() const;

  // @@protoc_insertion_point(class_scope:KeyEntries)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::KeyEntry > entries_;
  friend struct  protobuf_txn_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RemoteResultsEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RemoteResultsEntry) */ {
 public:
  RemoteResultsEntry();
  virtual ~RemoteResultsEntry();

  RemoteResultsEntry(const RemoteResultsEntry& from);

  inline RemoteResultsEntry& operator=(const RemoteResultsEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoteResultsEntry& default_instance();

  static inline const RemoteResultsEntry* internal_default_instance() {
    return reinterpret_cast<const RemoteResultsEntry*>(
               &_RemoteResultsEntry_default_instance_);
  }

  void Swap(RemoteResultsEntry* other);

  // implements Message ----------------------------------------------

  inline RemoteResultsEntry* New() const PROTOBUF_FINAL { return New(NULL); }

  RemoteResultsEntry* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RemoteResultsEntry& from);
  void MergeFrom(const RemoteResultsEntry& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RemoteResultsEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const void* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // required bytes value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // required uint64 counter = 4;
  bool has_counter() const;
  void clear_counter();
  static const int kCounterFieldNumber = 4;
  ::google::protobuf::uint64 counter() const;
  void set_counter(::google::protobuf::uint64 value);

  // required uint32 master = 3;
  bool has_master() const;
  void clear_master();
  static const int kMasterFieldNumber = 3;
  ::google::protobuf::uint32 master() const;
  void set_master(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:RemoteResultsEntry)
 private:
  void set_has_key();
  void clear_has_key();
  void set_has_value();
  void clear_has_value();
  void set_has_master();
  void clear_has_master();
  void set_has_counter();
  void clear_has_counter();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::uint64 counter_;
  ::google::protobuf::uint32 master_;
  friend struct  protobuf_txn_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RemoteResultsEntries : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RemoteResultsEntries) */ {
 public:
  RemoteResultsEntries();
  virtual ~RemoteResultsEntries();

  RemoteResultsEntries(const RemoteResultsEntries& from);

  inline RemoteResultsEntries& operator=(const RemoteResultsEntries& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoteResultsEntries& default_instance();

  static inline const RemoteResultsEntries* internal_default_instance() {
    return reinterpret_cast<const RemoteResultsEntries*>(
               &_RemoteResultsEntries_default_instance_);
  }

  void Swap(RemoteResultsEntries* other);

  // implements Message ----------------------------------------------

  inline RemoteResultsEntries* New() const PROTOBUF_FINAL { return New(NULL); }

  RemoteResultsEntries* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RemoteResultsEntries& from);
  void MergeFrom(const RemoteResultsEntries& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RemoteResultsEntries* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .RemoteResultsEntry entries = 1;
  int entries_size() const;
  void clear_entries();
  static const int kEntriesFieldNumber = 1;
  const ::RemoteResultsEntry& entries(int index) const;
  ::RemoteResultsEntry* mutable_entries(int index);
  ::RemoteResultsEntry* add_entries();
  ::google::protobuf::RepeatedPtrField< ::RemoteResultsEntry >*
      mutable_entries();
  const ::google::protobuf::RepeatedPtrField< ::RemoteResultsEntry >&
      entries() const;

  // @@protoc_insertion_point(class_scope:RemoteResultsEntries)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::RemoteResultsEntry > entries_;
  friend struct  protobuf_txn_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TxnProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TxnProto) */ {
 public:
  TxnProto();
  virtual ~TxnProto();

  TxnProto(const TxnProto& from);

  inline TxnProto& operator=(const TxnProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TxnProto& default_instance();

  static inline const TxnProto* internal_default_instance() {
    return reinterpret_cast<const TxnProto*>(
               &_TxnProto_default_instance_);
  }

  void Swap(TxnProto* other);

  // implements Message ----------------------------------------------

  inline TxnProto* New() const PROTOBUF_FINAL { return New(NULL); }

  TxnProto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TxnProto& from);
  void MergeFrom(const TxnProto& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TxnProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef TxnProto_Status Status;
  static const Status NEW =
    TxnProto_Status_NEW;
  static const Status ACTIVE =
    TxnProto_Status_ACTIVE;
  static const Status COMMITTED =
    TxnProto_Status_COMMITTED;
  static const Status ABORTED =
    TxnProto_Status_ABORTED;
  static const Status ABORTED_WITHOUT_LOCK =
    TxnProto_Status_ABORTED_WITHOUT_LOCK;
  static inline bool Status_IsValid(int value) {
    return TxnProto_Status_IsValid(value);
  }
  static const Status Status_MIN =
    TxnProto_Status_Status_MIN;
  static const Status Status_MAX =
    TxnProto_Status_Status_MAX;
  static const int Status_ARRAYSIZE =
    TxnProto_Status_Status_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Status_descriptor() {
    return TxnProto_Status_descriptor();
  }
  static inline const ::std::string& Status_Name(Status value) {
    return TxnProto_Status_Name(value);
  }
  static inline bool Status_Parse(const ::std::string& name,
      Status* value) {
    return TxnProto_Status_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .KeyEntry read_set = 20;
  int read_set_size() const;
  void clear_read_set();
  static const int kReadSetFieldNumber = 20;
  const ::KeyEntry& read_set(int index) const;
  ::KeyEntry* mutable_read_set(int index);
  ::KeyEntry* add_read_set();
  ::google::protobuf::RepeatedPtrField< ::KeyEntry >*
      mutable_read_set();
  const ::google::protobuf::RepeatedPtrField< ::KeyEntry >&
      read_set() const;

  // repeated .KeyEntry write_set = 21;
  int write_set_size() const;
  void clear_write_set();
  static const int kWriteSetFieldNumber = 21;
  const ::KeyEntry& write_set(int index) const;
  ::KeyEntry* mutable_write_set(int index);
  ::KeyEntry* add_write_set();
  ::google::protobuf::RepeatedPtrField< ::KeyEntry >*
      mutable_write_set();
  const ::google::protobuf::RepeatedPtrField< ::KeyEntry >&
      write_set() const;

  // repeated .KeyEntry read_write_set = 22;
  int read_write_set_size() const;
  void clear_read_write_set();
  static const int kReadWriteSetFieldNumber = 22;
  const ::KeyEntry& read_write_set(int index) const;
  ::KeyEntry* mutable_read_write_set(int index);
  ::KeyEntry* add_read_write_set();
  ::google::protobuf::RepeatedPtrField< ::KeyEntry >*
      mutable_read_write_set();
  const ::google::protobuf::RepeatedPtrField< ::KeyEntry >&
      read_write_set() const;

  // repeated uint64 readers = 40;
  int readers_size() const;
  void clear_readers();
  static const int kReadersFieldNumber = 40;
  ::google::protobuf::uint64 readers(int index) const;
  void set_readers(int index, ::google::protobuf::uint64 value);
  void add_readers(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      readers() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_readers();

  // repeated uint64 writers = 41;
  int writers_size() const;
  void clear_writers();
  static const int kWritersFieldNumber = 41;
  ::google::protobuf::uint64 writers(int index) const;
  void set_writers(int index, ::google::protobuf::uint64 value);
  void add_writers(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      writers() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_writers();

  // repeated uint32 involved_replicas = 52;
  int involved_replicas_size() const;
  void clear_involved_replicas();
  static const int kInvolvedReplicasFieldNumber = 52;
  ::google::protobuf::uint32 involved_replicas(int index) const;
  void set_involved_replicas(int index, ::google::protobuf::uint32 value);
  void add_involved_replicas(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      involved_replicas() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_involved_replicas();

  // optional bytes arg = 23;
  bool has_arg() const;
  void clear_arg();
  static const int kArgFieldNumber = 23;
  const ::std::string& arg() const;
  void set_arg(const ::std::string& value);
  #if LANG_CXX11
  void set_arg(::std::string&& value);
  #endif
  void set_arg(const char* value);
  void set_arg(const void* value, size_t size);
  ::std::string* mutable_arg();
  ::std::string* release_arg();
  void set_allocated_arg(::std::string* arg);

  // required uint64 txn_id = 1;
  bool has_txn_id() const;
  void clear_txn_id();
  static const int kTxnIdFieldNumber = 1;
  ::google::protobuf::uint64 txn_id() const;
  void set_txn_id(::google::protobuf::uint64 value);

  // optional uint32 txn_type = 10;
  bool has_txn_type() const;
  void clear_txn_type();
  static const int kTxnTypeFieldNumber = 10;
  ::google::protobuf::uint32 txn_type() const;
  void set_txn_type(::google::protobuf::uint32 value);

  // optional .TxnProto.Status status = 30 [default = NEW];
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 30;
  ::TxnProto_Status status() const;
  void set_status(::TxnProto_Status value);

  // optional uint32 origin_replica = 50 [default = 0];
  bool has_origin_replica() const;
  void clear_origin_replica();
  static const int kOriginReplicaFieldNumber = 50;
  ::google::protobuf::uint32 origin_replica() const;
  void set_origin_replica(::google::protobuf::uint32 value);

  // optional bool new_generated = 51 [default = false];
  bool has_new_generated() const;
  void clear_new_generated();
  static const int kNewGeneratedFieldNumber = 51;
  bool new_generated() const;
  void set_new_generated(bool value);

  // optional bool fake_txn = 53 [default = false];
  bool has_fake_txn() const;
  void clear_fake_txn();
  static const int kFakeTxnFieldNumber = 53;
  bool fake_txn() const;
  void set_fake_txn(bool value);

  // optional bool remaster_txn = 54 [default = false];
  bool has_remaster_txn() const;
  void clear_remaster_txn();
  static const int kRemasterTxnFieldNumber = 54;
  bool remaster_txn() const;
  void set_remaster_txn(bool value);

  // optional bool wait_for_remaster_pros = 58 [default = false];
  bool has_wait_for_remaster_pros() const;
  void clear_wait_for_remaster_pros();
  static const int kWaitForRemasterProsFieldNumber = 58;
  bool wait_for_remaster_pros() const;
  void set_wait_for_remaster_pros(bool value);

  // optional uint32 client_replica = 55;
  bool has_client_replica() const;
  void clear_client_replica();
  static const int kClientReplicaFieldNumber = 55;
  ::google::protobuf::uint32 client_replica() const;
  void set_client_replica(::google::protobuf::uint32 value);

  // optional uint32 remaster_from = 56 [default = 99999];
  bool has_remaster_from() const;
  void clear_remaster_from();
  static const int kRemasterFromFieldNumber = 56;
  ::google::protobuf::uint32 remaster_from() const;
  void set_remaster_from(::google::protobuf::uint32 value);

  // optional uint32 remaster_to = 57 [default = 99999];
  bool has_remaster_to() const;
  void clear_remaster_to();
  static const int kRemasterToFieldNumber = 57;
  ::google::protobuf::uint32 remaster_to() const;
  void set_remaster_to(::google::protobuf::uint32 value);

  // optional uint64 generated_machine = 64 [default = 1000];
  bool has_generated_machine() const;
  void clear_generated_machine();
  static const int kGeneratedMachineFieldNumber = 64;
  ::google::protobuf::uint64 generated_machine() const;
  void set_generated_machine(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:TxnProto)
 private:
  void set_has_txn_id();
  void clear_has_txn_id();
  void set_has_txn_type();
  void clear_has_txn_type();
  void set_has_arg();
  void clear_has_arg();
  void set_has_status();
  void clear_has_status();
  void set_has_origin_replica();
  void clear_has_origin_replica();
  void set_has_new_generated();
  void clear_has_new_generated();
  void set_has_fake_txn();
  void clear_has_fake_txn();
  void set_has_remaster_txn();
  void clear_has_remaster_txn();
  void set_has_client_replica();
  void clear_has_client_replica();
  void set_has_remaster_from();
  void clear_has_remaster_from();
  void set_has_remaster_to();
  void clear_has_remaster_to();
  void set_has_wait_for_remaster_pros();
  void clear_has_wait_for_remaster_pros();
  void set_has_generated_machine();
  void clear_has_generated_machine();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::KeyEntry > read_set_;
  ::google::protobuf::RepeatedPtrField< ::KeyEntry > write_set_;
  ::google::protobuf::RepeatedPtrField< ::KeyEntry > read_write_set_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > readers_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > writers_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > involved_replicas_;
  ::google::protobuf::internal::ArenaStringPtr arg_;
  ::google::protobuf::uint64 txn_id_;
  ::google::protobuf::uint32 txn_type_;
  int status_;
  ::google::protobuf::uint32 origin_replica_;
  bool new_generated_;
  bool fake_txn_;
  bool remaster_txn_;
  bool wait_for_remaster_pros_;
  ::google::protobuf::uint32 client_replica_;
  ::google::protobuf::uint32 remaster_from_;
  ::google::protobuf::uint32 remaster_to_;
  ::google::protobuf::uint64 generated_machine_;
  friend struct  protobuf_txn_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LookupMasterEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LookupMasterEntry) */ {
 public:
  LookupMasterEntry();
  virtual ~LookupMasterEntry();

  LookupMasterEntry(const LookupMasterEntry& from);

  inline LookupMasterEntry& operator=(const LookupMasterEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LookupMasterEntry& default_instance();

  static inline const LookupMasterEntry* internal_default_instance() {
    return reinterpret_cast<const LookupMasterEntry*>(
               &_LookupMasterEntry_default_instance_);
  }

  void Swap(LookupMasterEntry* other);

  // implements Message ----------------------------------------------

  inline LookupMasterEntry* New() const PROTOBUF_FINAL { return New(NULL); }

  LookupMasterEntry* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LookupMasterEntry& from);
  void MergeFrom(const LookupMasterEntry& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LookupMasterEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes keys = 2;
  int keys_size() const;
  void clear_keys();
  static const int kKeysFieldNumber = 2;
  const ::std::string& keys(int index) const;
  ::std::string* mutable_keys(int index);
  void set_keys(int index, const ::std::string& value);
  void set_keys(int index, const char* value);
  void set_keys(int index, const void* value, size_t size);
  ::std::string* add_keys();
  void add_keys(const ::std::string& value);
  void add_keys(const char* value);
  void add_keys(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& keys() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_keys();

  // required uint64 txn_id = 1;
  bool has_txn_id() const;
  void clear_txn_id();
  static const int kTxnIdFieldNumber = 1;
  ::google::protobuf::uint64 txn_id() const;
  void set_txn_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:LookupMasterEntry)
 private:
  void set_has_txn_id();
  void clear_has_txn_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> keys_;
  ::google::protobuf::uint64 txn_id_;
  friend struct  protobuf_txn_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LookupMasterResultEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LookupMasterResultEntry) */ {
 public:
  LookupMasterResultEntry();
  virtual ~LookupMasterResultEntry();

  LookupMasterResultEntry(const LookupMasterResultEntry& from);

  inline LookupMasterResultEntry& operator=(const LookupMasterResultEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LookupMasterResultEntry& default_instance();

  static inline const LookupMasterResultEntry* internal_default_instance() {
    return reinterpret_cast<const LookupMasterResultEntry*>(
               &_LookupMasterResultEntry_default_instance_);
  }

  void Swap(LookupMasterResultEntry* other);

  // implements Message ----------------------------------------------

  inline LookupMasterResultEntry* New() const PROTOBUF_FINAL { return New(NULL); }

  LookupMasterResultEntry* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LookupMasterResultEntry& from);
  void MergeFrom(const LookupMasterResultEntry& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LookupMasterResultEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .KeyEntry key_entries = 2;
  int key_entries_size() const;
  void clear_key_entries();
  static const int kKeyEntriesFieldNumber = 2;
  const ::KeyEntry& key_entries(int index) const;
  ::KeyEntry* mutable_key_entries(int index);
  ::KeyEntry* add_key_entries();
  ::google::protobuf::RepeatedPtrField< ::KeyEntry >*
      mutable_key_entries();
  const ::google::protobuf::RepeatedPtrField< ::KeyEntry >&
      key_entries() const;

  // required uint64 txn_id = 1;
  bool has_txn_id() const;
  void clear_txn_id();
  static const int kTxnIdFieldNumber = 1;
  ::google::protobuf::uint64 txn_id() const;
  void set_txn_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:LookupMasterResultEntry)
 private:
  void set_has_txn_id();
  void clear_has_txn_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::KeyEntry > key_entries_;
  ::google::protobuf::uint64 txn_id_;
  friend struct  protobuf_txn_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// KeyEntry

// required bytes key = 1;
inline bool KeyEntry::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KeyEntry::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KeyEntry::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KeyEntry::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& KeyEntry::key() const {
  // @@protoc_insertion_point(field_get:KeyEntry.key)
  return key_.GetNoArena();
}
inline void KeyEntry::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KeyEntry.key)
}
#if LANG_CXX11
inline void KeyEntry::set_key(::std::string&& value) {
  set_has_key();
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KeyEntry.key)
}
#endif
inline void KeyEntry::set_key(const char* value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KeyEntry.key)
}
inline void KeyEntry::set_key(const void* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KeyEntry.key)
}
inline ::std::string* KeyEntry::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:KeyEntry.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* KeyEntry::release_key() {
  // @@protoc_insertion_point(field_release:KeyEntry.key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KeyEntry::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:KeyEntry.key)
}

// required uint32 master = 2;
inline bool KeyEntry::has_master() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void KeyEntry::set_has_master() {
  _has_bits_[0] |= 0x00000004u;
}
inline void KeyEntry::clear_has_master() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void KeyEntry::clear_master() {
  master_ = 0u;
  clear_has_master();
}
inline ::google::protobuf::uint32 KeyEntry::master() const {
  // @@protoc_insertion_point(field_get:KeyEntry.master)
  return master_;
}
inline void KeyEntry::set_master(::google::protobuf::uint32 value) {
  set_has_master();
  master_ = value;
  // @@protoc_insertion_point(field_set:KeyEntry.master)
}

// required uint64 counter = 3;
inline bool KeyEntry::has_counter() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void KeyEntry::set_has_counter() {
  _has_bits_[0] |= 0x00000002u;
}
inline void KeyEntry::clear_has_counter() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void KeyEntry::clear_counter() {
  counter_ = GOOGLE_ULONGLONG(0);
  clear_has_counter();
}
inline ::google::protobuf::uint64 KeyEntry::counter() const {
  // @@protoc_insertion_point(field_get:KeyEntry.counter)
  return counter_;
}
inline void KeyEntry::set_counter(::google::protobuf::uint64 value) {
  set_has_counter();
  counter_ = value;
  // @@protoc_insertion_point(field_set:KeyEntry.counter)
}

// -------------------------------------------------------------------

// KeyEntries

// repeated .KeyEntry entries = 1;
inline int KeyEntries::entries_size() const {
  return entries_.size();
}
inline void KeyEntries::clear_entries() {
  entries_.Clear();
}
inline const ::KeyEntry& KeyEntries::entries(int index) const {
  // @@protoc_insertion_point(field_get:KeyEntries.entries)
  return entries_.Get(index);
}
inline ::KeyEntry* KeyEntries::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:KeyEntries.entries)
  return entries_.Mutable(index);
}
inline ::KeyEntry* KeyEntries::add_entries() {
  // @@protoc_insertion_point(field_add:KeyEntries.entries)
  return entries_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::KeyEntry >*
KeyEntries::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:KeyEntries.entries)
  return &entries_;
}
inline const ::google::protobuf::RepeatedPtrField< ::KeyEntry >&
KeyEntries::entries() const {
  // @@protoc_insertion_point(field_list:KeyEntries.entries)
  return entries_;
}

// -------------------------------------------------------------------

// RemoteResultsEntry

// required bytes key = 1;
inline bool RemoteResultsEntry::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RemoteResultsEntry::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RemoteResultsEntry::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RemoteResultsEntry::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& RemoteResultsEntry::key() const {
  // @@protoc_insertion_point(field_get:RemoteResultsEntry.key)
  return key_.GetNoArena();
}
inline void RemoteResultsEntry::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RemoteResultsEntry.key)
}
#if LANG_CXX11
inline void RemoteResultsEntry::set_key(::std::string&& value) {
  set_has_key();
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RemoteResultsEntry.key)
}
#endif
inline void RemoteResultsEntry::set_key(const char* value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RemoteResultsEntry.key)
}
inline void RemoteResultsEntry::set_key(const void* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RemoteResultsEntry.key)
}
inline ::std::string* RemoteResultsEntry::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:RemoteResultsEntry.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RemoteResultsEntry::release_key() {
  // @@protoc_insertion_point(field_release:RemoteResultsEntry.key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RemoteResultsEntry::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:RemoteResultsEntry.key)
}

// required bytes value = 2;
inline bool RemoteResultsEntry::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RemoteResultsEntry::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RemoteResultsEntry::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RemoteResultsEntry::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& RemoteResultsEntry::value() const {
  // @@protoc_insertion_point(field_get:RemoteResultsEntry.value)
  return value_.GetNoArena();
}
inline void RemoteResultsEntry::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RemoteResultsEntry.value)
}
#if LANG_CXX11
inline void RemoteResultsEntry::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RemoteResultsEntry.value)
}
#endif
inline void RemoteResultsEntry::set_value(const char* value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RemoteResultsEntry.value)
}
inline void RemoteResultsEntry::set_value(const void* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RemoteResultsEntry.value)
}
inline ::std::string* RemoteResultsEntry::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:RemoteResultsEntry.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RemoteResultsEntry::release_value() {
  // @@protoc_insertion_point(field_release:RemoteResultsEntry.value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RemoteResultsEntry::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:RemoteResultsEntry.value)
}

// required uint32 master = 3;
inline bool RemoteResultsEntry::has_master() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RemoteResultsEntry::set_has_master() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RemoteResultsEntry::clear_has_master() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RemoteResultsEntry::clear_master() {
  master_ = 0u;
  clear_has_master();
}
inline ::google::protobuf::uint32 RemoteResultsEntry::master() const {
  // @@protoc_insertion_point(field_get:RemoteResultsEntry.master)
  return master_;
}
inline void RemoteResultsEntry::set_master(::google::protobuf::uint32 value) {
  set_has_master();
  master_ = value;
  // @@protoc_insertion_point(field_set:RemoteResultsEntry.master)
}

// required uint64 counter = 4;
inline bool RemoteResultsEntry::has_counter() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RemoteResultsEntry::set_has_counter() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RemoteResultsEntry::clear_has_counter() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RemoteResultsEntry::clear_counter() {
  counter_ = GOOGLE_ULONGLONG(0);
  clear_has_counter();
}
inline ::google::protobuf::uint64 RemoteResultsEntry::counter() const {
  // @@protoc_insertion_point(field_get:RemoteResultsEntry.counter)
  return counter_;
}
inline void RemoteResultsEntry::set_counter(::google::protobuf::uint64 value) {
  set_has_counter();
  counter_ = value;
  // @@protoc_insertion_point(field_set:RemoteResultsEntry.counter)
}

// -------------------------------------------------------------------

// RemoteResultsEntries

// repeated .RemoteResultsEntry entries = 1;
inline int RemoteResultsEntries::entries_size() const {
  return entries_.size();
}
inline void RemoteResultsEntries::clear_entries() {
  entries_.Clear();
}
inline const ::RemoteResultsEntry& RemoteResultsEntries::entries(int index) const {
  // @@protoc_insertion_point(field_get:RemoteResultsEntries.entries)
  return entries_.Get(index);
}
inline ::RemoteResultsEntry* RemoteResultsEntries::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:RemoteResultsEntries.entries)
  return entries_.Mutable(index);
}
inline ::RemoteResultsEntry* RemoteResultsEntries::add_entries() {
  // @@protoc_insertion_point(field_add:RemoteResultsEntries.entries)
  return entries_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::RemoteResultsEntry >*
RemoteResultsEntries::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:RemoteResultsEntries.entries)
  return &entries_;
}
inline const ::google::protobuf::RepeatedPtrField< ::RemoteResultsEntry >&
RemoteResultsEntries::entries() const {
  // @@protoc_insertion_point(field_list:RemoteResultsEntries.entries)
  return entries_;
}

// -------------------------------------------------------------------

// TxnProto

// required uint64 txn_id = 1;
inline bool TxnProto::has_txn_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TxnProto::set_has_txn_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TxnProto::clear_has_txn_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TxnProto::clear_txn_id() {
  txn_id_ = GOOGLE_ULONGLONG(0);
  clear_has_txn_id();
}
inline ::google::protobuf::uint64 TxnProto::txn_id() const {
  // @@protoc_insertion_point(field_get:TxnProto.txn_id)
  return txn_id_;
}
inline void TxnProto::set_txn_id(::google::protobuf::uint64 value) {
  set_has_txn_id();
  txn_id_ = value;
  // @@protoc_insertion_point(field_set:TxnProto.txn_id)
}

// optional uint32 txn_type = 10;
inline bool TxnProto::has_txn_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TxnProto::set_has_txn_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TxnProto::clear_has_txn_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TxnProto::clear_txn_type() {
  txn_type_ = 0u;
  clear_has_txn_type();
}
inline ::google::protobuf::uint32 TxnProto::txn_type() const {
  // @@protoc_insertion_point(field_get:TxnProto.txn_type)
  return txn_type_;
}
inline void TxnProto::set_txn_type(::google::protobuf::uint32 value) {
  set_has_txn_type();
  txn_type_ = value;
  // @@protoc_insertion_point(field_set:TxnProto.txn_type)
}

// repeated .KeyEntry read_set = 20;
inline int TxnProto::read_set_size() const {
  return read_set_.size();
}
inline void TxnProto::clear_read_set() {
  read_set_.Clear();
}
inline const ::KeyEntry& TxnProto::read_set(int index) const {
  // @@protoc_insertion_point(field_get:TxnProto.read_set)
  return read_set_.Get(index);
}
inline ::KeyEntry* TxnProto::mutable_read_set(int index) {
  // @@protoc_insertion_point(field_mutable:TxnProto.read_set)
  return read_set_.Mutable(index);
}
inline ::KeyEntry* TxnProto::add_read_set() {
  // @@protoc_insertion_point(field_add:TxnProto.read_set)
  return read_set_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::KeyEntry >*
TxnProto::mutable_read_set() {
  // @@protoc_insertion_point(field_mutable_list:TxnProto.read_set)
  return &read_set_;
}
inline const ::google::protobuf::RepeatedPtrField< ::KeyEntry >&
TxnProto::read_set() const {
  // @@protoc_insertion_point(field_list:TxnProto.read_set)
  return read_set_;
}

// repeated .KeyEntry write_set = 21;
inline int TxnProto::write_set_size() const {
  return write_set_.size();
}
inline void TxnProto::clear_write_set() {
  write_set_.Clear();
}
inline const ::KeyEntry& TxnProto::write_set(int index) const {
  // @@protoc_insertion_point(field_get:TxnProto.write_set)
  return write_set_.Get(index);
}
inline ::KeyEntry* TxnProto::mutable_write_set(int index) {
  // @@protoc_insertion_point(field_mutable:TxnProto.write_set)
  return write_set_.Mutable(index);
}
inline ::KeyEntry* TxnProto::add_write_set() {
  // @@protoc_insertion_point(field_add:TxnProto.write_set)
  return write_set_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::KeyEntry >*
TxnProto::mutable_write_set() {
  // @@protoc_insertion_point(field_mutable_list:TxnProto.write_set)
  return &write_set_;
}
inline const ::google::protobuf::RepeatedPtrField< ::KeyEntry >&
TxnProto::write_set() const {
  // @@protoc_insertion_point(field_list:TxnProto.write_set)
  return write_set_;
}

// repeated .KeyEntry read_write_set = 22;
inline int TxnProto::read_write_set_size() const {
  return read_write_set_.size();
}
inline void TxnProto::clear_read_write_set() {
  read_write_set_.Clear();
}
inline const ::KeyEntry& TxnProto::read_write_set(int index) const {
  // @@protoc_insertion_point(field_get:TxnProto.read_write_set)
  return read_write_set_.Get(index);
}
inline ::KeyEntry* TxnProto::mutable_read_write_set(int index) {
  // @@protoc_insertion_point(field_mutable:TxnProto.read_write_set)
  return read_write_set_.Mutable(index);
}
inline ::KeyEntry* TxnProto::add_read_write_set() {
  // @@protoc_insertion_point(field_add:TxnProto.read_write_set)
  return read_write_set_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::KeyEntry >*
TxnProto::mutable_read_write_set() {
  // @@protoc_insertion_point(field_mutable_list:TxnProto.read_write_set)
  return &read_write_set_;
}
inline const ::google::protobuf::RepeatedPtrField< ::KeyEntry >&
TxnProto::read_write_set() const {
  // @@protoc_insertion_point(field_list:TxnProto.read_write_set)
  return read_write_set_;
}

// optional bytes arg = 23;
inline bool TxnProto::has_arg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TxnProto::set_has_arg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TxnProto::clear_has_arg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TxnProto::clear_arg() {
  arg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_arg();
}
inline const ::std::string& TxnProto::arg() const {
  // @@protoc_insertion_point(field_get:TxnProto.arg)
  return arg_.GetNoArena();
}
inline void TxnProto::set_arg(const ::std::string& value) {
  set_has_arg();
  arg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TxnProto.arg)
}
#if LANG_CXX11
inline void TxnProto::set_arg(::std::string&& value) {
  set_has_arg();
  arg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TxnProto.arg)
}
#endif
inline void TxnProto::set_arg(const char* value) {
  set_has_arg();
  arg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TxnProto.arg)
}
inline void TxnProto::set_arg(const void* value, size_t size) {
  set_has_arg();
  arg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TxnProto.arg)
}
inline ::std::string* TxnProto::mutable_arg() {
  set_has_arg();
  // @@protoc_insertion_point(field_mutable:TxnProto.arg)
  return arg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TxnProto::release_arg() {
  // @@protoc_insertion_point(field_release:TxnProto.arg)
  clear_has_arg();
  return arg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TxnProto::set_allocated_arg(::std::string* arg) {
  if (arg != NULL) {
    set_has_arg();
  } else {
    clear_has_arg();
  }
  arg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arg);
  // @@protoc_insertion_point(field_set_allocated:TxnProto.arg)
}

// optional .TxnProto.Status status = 30 [default = NEW];
inline bool TxnProto::has_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TxnProto::set_has_status() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TxnProto::clear_has_status() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TxnProto::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::TxnProto_Status TxnProto::status() const {
  // @@protoc_insertion_point(field_get:TxnProto.status)
  return static_cast< ::TxnProto_Status >(status_);
}
inline void TxnProto::set_status(::TxnProto_Status value) {
  assert(::TxnProto_Status_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:TxnProto.status)
}

// repeated uint64 readers = 40;
inline int TxnProto::readers_size() const {
  return readers_.size();
}
inline void TxnProto::clear_readers() {
  readers_.Clear();
}
inline ::google::protobuf::uint64 TxnProto::readers(int index) const {
  // @@protoc_insertion_point(field_get:TxnProto.readers)
  return readers_.Get(index);
}
inline void TxnProto::set_readers(int index, ::google::protobuf::uint64 value) {
  readers_.Set(index, value);
  // @@protoc_insertion_point(field_set:TxnProto.readers)
}
inline void TxnProto::add_readers(::google::protobuf::uint64 value) {
  readers_.Add(value);
  // @@protoc_insertion_point(field_add:TxnProto.readers)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
TxnProto::readers() const {
  // @@protoc_insertion_point(field_list:TxnProto.readers)
  return readers_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
TxnProto::mutable_readers() {
  // @@protoc_insertion_point(field_mutable_list:TxnProto.readers)
  return &readers_;
}

// repeated uint64 writers = 41;
inline int TxnProto::writers_size() const {
  return writers_.size();
}
inline void TxnProto::clear_writers() {
  writers_.Clear();
}
inline ::google::protobuf::uint64 TxnProto::writers(int index) const {
  // @@protoc_insertion_point(field_get:TxnProto.writers)
  return writers_.Get(index);
}
inline void TxnProto::set_writers(int index, ::google::protobuf::uint64 value) {
  writers_.Set(index, value);
  // @@protoc_insertion_point(field_set:TxnProto.writers)
}
inline void TxnProto::add_writers(::google::protobuf::uint64 value) {
  writers_.Add(value);
  // @@protoc_insertion_point(field_add:TxnProto.writers)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
TxnProto::writers() const {
  // @@protoc_insertion_point(field_list:TxnProto.writers)
  return writers_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
TxnProto::mutable_writers() {
  // @@protoc_insertion_point(field_mutable_list:TxnProto.writers)
  return &writers_;
}

// optional uint32 origin_replica = 50 [default = 0];
inline bool TxnProto::has_origin_replica() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TxnProto::set_has_origin_replica() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TxnProto::clear_has_origin_replica() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TxnProto::clear_origin_replica() {
  origin_replica_ = 0u;
  clear_has_origin_replica();
}
inline ::google::protobuf::uint32 TxnProto::origin_replica() const {
  // @@protoc_insertion_point(field_get:TxnProto.origin_replica)
  return origin_replica_;
}
inline void TxnProto::set_origin_replica(::google::protobuf::uint32 value) {
  set_has_origin_replica();
  origin_replica_ = value;
  // @@protoc_insertion_point(field_set:TxnProto.origin_replica)
}

// optional bool new_generated = 51 [default = false];
inline bool TxnProto::has_new_generated() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TxnProto::set_has_new_generated() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TxnProto::clear_has_new_generated() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TxnProto::clear_new_generated() {
  new_generated_ = false;
  clear_has_new_generated();
}
inline bool TxnProto::new_generated() const {
  // @@protoc_insertion_point(field_get:TxnProto.new_generated)
  return new_generated_;
}
inline void TxnProto::set_new_generated(bool value) {
  set_has_new_generated();
  new_generated_ = value;
  // @@protoc_insertion_point(field_set:TxnProto.new_generated)
}

// repeated uint32 involved_replicas = 52;
inline int TxnProto::involved_replicas_size() const {
  return involved_replicas_.size();
}
inline void TxnProto::clear_involved_replicas() {
  involved_replicas_.Clear();
}
inline ::google::protobuf::uint32 TxnProto::involved_replicas(int index) const {
  // @@protoc_insertion_point(field_get:TxnProto.involved_replicas)
  return involved_replicas_.Get(index);
}
inline void TxnProto::set_involved_replicas(int index, ::google::protobuf::uint32 value) {
  involved_replicas_.Set(index, value);
  // @@protoc_insertion_point(field_set:TxnProto.involved_replicas)
}
inline void TxnProto::add_involved_replicas(::google::protobuf::uint32 value) {
  involved_replicas_.Add(value);
  // @@protoc_insertion_point(field_add:TxnProto.involved_replicas)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TxnProto::involved_replicas() const {
  // @@protoc_insertion_point(field_list:TxnProto.involved_replicas)
  return involved_replicas_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TxnProto::mutable_involved_replicas() {
  // @@protoc_insertion_point(field_mutable_list:TxnProto.involved_replicas)
  return &involved_replicas_;
}

// optional bool fake_txn = 53 [default = false];
inline bool TxnProto::has_fake_txn() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TxnProto::set_has_fake_txn() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TxnProto::clear_has_fake_txn() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TxnProto::clear_fake_txn() {
  fake_txn_ = false;
  clear_has_fake_txn();
}
inline bool TxnProto::fake_txn() const {
  // @@protoc_insertion_point(field_get:TxnProto.fake_txn)
  return fake_txn_;
}
inline void TxnProto::set_fake_txn(bool value) {
  set_has_fake_txn();
  fake_txn_ = value;
  // @@protoc_insertion_point(field_set:TxnProto.fake_txn)
}

// optional bool remaster_txn = 54 [default = false];
inline bool TxnProto::has_remaster_txn() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void TxnProto::set_has_remaster_txn() {
  _has_bits_[0] |= 0x00000080u;
}
inline void TxnProto::clear_has_remaster_txn() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void TxnProto::clear_remaster_txn() {
  remaster_txn_ = false;
  clear_has_remaster_txn();
}
inline bool TxnProto::remaster_txn() const {
  // @@protoc_insertion_point(field_get:TxnProto.remaster_txn)
  return remaster_txn_;
}
inline void TxnProto::set_remaster_txn(bool value) {
  set_has_remaster_txn();
  remaster_txn_ = value;
  // @@protoc_insertion_point(field_set:TxnProto.remaster_txn)
}

// optional uint32 client_replica = 55;
inline bool TxnProto::has_client_replica() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void TxnProto::set_has_client_replica() {
  _has_bits_[0] |= 0x00000200u;
}
inline void TxnProto::clear_has_client_replica() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void TxnProto::clear_client_replica() {
  client_replica_ = 0u;
  clear_has_client_replica();
}
inline ::google::protobuf::uint32 TxnProto::client_replica() const {
  // @@protoc_insertion_point(field_get:TxnProto.client_replica)
  return client_replica_;
}
inline void TxnProto::set_client_replica(::google::protobuf::uint32 value) {
  set_has_client_replica();
  client_replica_ = value;
  // @@protoc_insertion_point(field_set:TxnProto.client_replica)
}

// optional uint32 remaster_from = 56 [default = 99999];
inline bool TxnProto::has_remaster_from() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void TxnProto::set_has_remaster_from() {
  _has_bits_[0] |= 0x00000400u;
}
inline void TxnProto::clear_has_remaster_from() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void TxnProto::clear_remaster_from() {
  remaster_from_ = 99999u;
  clear_has_remaster_from();
}
inline ::google::protobuf::uint32 TxnProto::remaster_from() const {
  // @@protoc_insertion_point(field_get:TxnProto.remaster_from)
  return remaster_from_;
}
inline void TxnProto::set_remaster_from(::google::protobuf::uint32 value) {
  set_has_remaster_from();
  remaster_from_ = value;
  // @@protoc_insertion_point(field_set:TxnProto.remaster_from)
}

// optional uint32 remaster_to = 57 [default = 99999];
inline bool TxnProto::has_remaster_to() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void TxnProto::set_has_remaster_to() {
  _has_bits_[0] |= 0x00000800u;
}
inline void TxnProto::clear_has_remaster_to() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void TxnProto::clear_remaster_to() {
  remaster_to_ = 99999u;
  clear_has_remaster_to();
}
inline ::google::protobuf::uint32 TxnProto::remaster_to() const {
  // @@protoc_insertion_point(field_get:TxnProto.remaster_to)
  return remaster_to_;
}
inline void TxnProto::set_remaster_to(::google::protobuf::uint32 value) {
  set_has_remaster_to();
  remaster_to_ = value;
  // @@protoc_insertion_point(field_set:TxnProto.remaster_to)
}

// optional bool wait_for_remaster_pros = 58 [default = false];
inline bool TxnProto::has_wait_for_remaster_pros() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void TxnProto::set_has_wait_for_remaster_pros() {
  _has_bits_[0] |= 0x00000100u;
}
inline void TxnProto::clear_has_wait_for_remaster_pros() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void TxnProto::clear_wait_for_remaster_pros() {
  wait_for_remaster_pros_ = false;
  clear_has_wait_for_remaster_pros();
}
inline bool TxnProto::wait_for_remaster_pros() const {
  // @@protoc_insertion_point(field_get:TxnProto.wait_for_remaster_pros)
  return wait_for_remaster_pros_;
}
inline void TxnProto::set_wait_for_remaster_pros(bool value) {
  set_has_wait_for_remaster_pros();
  wait_for_remaster_pros_ = value;
  // @@protoc_insertion_point(field_set:TxnProto.wait_for_remaster_pros)
}

// optional uint64 generated_machine = 64 [default = 1000];
inline bool TxnProto::has_generated_machine() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void TxnProto::set_has_generated_machine() {
  _has_bits_[0] |= 0x00001000u;
}
inline void TxnProto::clear_has_generated_machine() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void TxnProto::clear_generated_machine() {
  generated_machine_ = GOOGLE_ULONGLONG(1000);
  clear_has_generated_machine();
}
inline ::google::protobuf::uint64 TxnProto::generated_machine() const {
  // @@protoc_insertion_point(field_get:TxnProto.generated_machine)
  return generated_machine_;
}
inline void TxnProto::set_generated_machine(::google::protobuf::uint64 value) {
  set_has_generated_machine();
  generated_machine_ = value;
  // @@protoc_insertion_point(field_set:TxnProto.generated_machine)
}

// -------------------------------------------------------------------

// LookupMasterEntry

// required uint64 txn_id = 1;
inline bool LookupMasterEntry::has_txn_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LookupMasterEntry::set_has_txn_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LookupMasterEntry::clear_has_txn_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LookupMasterEntry::clear_txn_id() {
  txn_id_ = GOOGLE_ULONGLONG(0);
  clear_has_txn_id();
}
inline ::google::protobuf::uint64 LookupMasterEntry::txn_id() const {
  // @@protoc_insertion_point(field_get:LookupMasterEntry.txn_id)
  return txn_id_;
}
inline void LookupMasterEntry::set_txn_id(::google::protobuf::uint64 value) {
  set_has_txn_id();
  txn_id_ = value;
  // @@protoc_insertion_point(field_set:LookupMasterEntry.txn_id)
}

// repeated bytes keys = 2;
inline int LookupMasterEntry::keys_size() const {
  return keys_.size();
}
inline void LookupMasterEntry::clear_keys() {
  keys_.Clear();
}
inline const ::std::string& LookupMasterEntry::keys(int index) const {
  // @@protoc_insertion_point(field_get:LookupMasterEntry.keys)
  return keys_.Get(index);
}
inline ::std::string* LookupMasterEntry::mutable_keys(int index) {
  // @@protoc_insertion_point(field_mutable:LookupMasterEntry.keys)
  return keys_.Mutable(index);
}
inline void LookupMasterEntry::set_keys(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:LookupMasterEntry.keys)
  keys_.Mutable(index)->assign(value);
}
inline void LookupMasterEntry::set_keys(int index, const char* value) {
  keys_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:LookupMasterEntry.keys)
}
inline void LookupMasterEntry::set_keys(int index, const void* value, size_t size) {
  keys_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LookupMasterEntry.keys)
}
inline ::std::string* LookupMasterEntry::add_keys() {
  // @@protoc_insertion_point(field_add_mutable:LookupMasterEntry.keys)
  return keys_.Add();
}
inline void LookupMasterEntry::add_keys(const ::std::string& value) {
  keys_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:LookupMasterEntry.keys)
}
inline void LookupMasterEntry::add_keys(const char* value) {
  keys_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:LookupMasterEntry.keys)
}
inline void LookupMasterEntry::add_keys(const void* value, size_t size) {
  keys_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:LookupMasterEntry.keys)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
LookupMasterEntry::keys() const {
  // @@protoc_insertion_point(field_list:LookupMasterEntry.keys)
  return keys_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
LookupMasterEntry::mutable_keys() {
  // @@protoc_insertion_point(field_mutable_list:LookupMasterEntry.keys)
  return &keys_;
}

// -------------------------------------------------------------------

// LookupMasterResultEntry

// required uint64 txn_id = 1;
inline bool LookupMasterResultEntry::has_txn_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LookupMasterResultEntry::set_has_txn_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LookupMasterResultEntry::clear_has_txn_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LookupMasterResultEntry::clear_txn_id() {
  txn_id_ = GOOGLE_ULONGLONG(0);
  clear_has_txn_id();
}
inline ::google::protobuf::uint64 LookupMasterResultEntry::txn_id() const {
  // @@protoc_insertion_point(field_get:LookupMasterResultEntry.txn_id)
  return txn_id_;
}
inline void LookupMasterResultEntry::set_txn_id(::google::protobuf::uint64 value) {
  set_has_txn_id();
  txn_id_ = value;
  // @@protoc_insertion_point(field_set:LookupMasterResultEntry.txn_id)
}

// repeated .KeyEntry key_entries = 2;
inline int LookupMasterResultEntry::key_entries_size() const {
  return key_entries_.size();
}
inline void LookupMasterResultEntry::clear_key_entries() {
  key_entries_.Clear();
}
inline const ::KeyEntry& LookupMasterResultEntry::key_entries(int index) const {
  // @@protoc_insertion_point(field_get:LookupMasterResultEntry.key_entries)
  return key_entries_.Get(index);
}
inline ::KeyEntry* LookupMasterResultEntry::mutable_key_entries(int index) {
  // @@protoc_insertion_point(field_mutable:LookupMasterResultEntry.key_entries)
  return key_entries_.Mutable(index);
}
inline ::KeyEntry* LookupMasterResultEntry::add_key_entries() {
  // @@protoc_insertion_point(field_add:LookupMasterResultEntry.key_entries)
  return key_entries_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::KeyEntry >*
LookupMasterResultEntry::mutable_key_entries() {
  // @@protoc_insertion_point(field_mutable_list:LookupMasterResultEntry.key_entries)
  return &key_entries_;
}
inline const ::google::protobuf::RepeatedPtrField< ::KeyEntry >&
LookupMasterResultEntry::key_entries() const {
  // @@protoc_insertion_point(field_list:LookupMasterResultEntry.key_entries)
  return key_entries_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::TxnProto_Status> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TxnProto_Status>() {
  return ::TxnProto_Status_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_txn_2eproto__INCLUDED
